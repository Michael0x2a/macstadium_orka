{
	"info": {
		"_postman_id": "63ff8197-9f8e-46dc-a89a-872d6b30cffb",
		"name": "Orka API",
		"description": "The Orka API and SDK enable programmatic access to the Orka virtual machine management and orchestration tools. Additionally, MacStadium provides a [companion CLI](https://orkadocs.macstadium.com/docs/orka-cli), a web front end, and [several CI/CD plugins](https://orkadocs.macstadium.com/docs/downloads#section-cicd-integrations).\n\n## Administrative authentication\n\nAdministrative requests, such as creating users and resetting passwords, must contain the `orka-licensekey: <license>` header.\n\n## Token-based authentication\n\nNon-administrative requests require JWT-based authentication and must contain an `Authorization: Bearer <token>` header.\n\nCurrently, tokens do not expire. Administrators can revoke tokens.\n\n## Error codes\n\nError codes follow HTTP response code best practices but might include additional Orka-specific information.\n\n## Rate limit\n\nYou should not be able to reach the default rate limit during normal usage. If you need to make adjustments to your environment, please [contact us](https://portal.macstadium.com/).\n\n## macOS considerations\n\nOn macOS, be careful of the formatting for `\"` (quotation marks).\n\nSometimes, when you copy from the API documentation to the clipboard, quotation marks might be re-formatted to a different special character.\n\n## Service endpoint\n\nThe default Orka service endpoint (API URL) is usually `http://10.221.188.100` OR `http://10.10.10.100` OR a custom domain endpoint.\n\n> **How to find your Orka endpoint?**\n>\n> You can get the IP for your Orka endpoint from your [IP Plan](https://orkadocs.macstadium.com/docs/ip-plan). It's the `.100` address from your `Private-1` network. Usually, `10.221.188.100` or `10.10.10.100`. **You need to use `http://` with this service endpoint.**\n>\n> To get the custom domain for your Orka cluster (if enabled):\n> 1. Log into your [MacStadium account](https://portal.macstadium.com/).\n> 2. Go to **Subscriptions** (from the top right corner) and select your Orka cluster.\n> 3. In the **Subscription & Plan** details, find your custom domain at the bottom. If you don't see a custom domain field, it's not enabled for your environment yet. **You need to use `https://` with custom domains.**\n>\n>  You can use the IP service endpoint and your custom domain interchangeably.\n\n> **Using a custom domain?**\n>\n> If you're using OpenConnect to access your Orka cluster via VPN, you need to [add a DNS server](https://orkadocs.macstadium.com/docs/vpn-connect#configure-openconnect-to-access-orka-via-custom-domain) to your network configuration. \n>\n> If you're using Cisco AnyConnect on macOS or Linux, you're already set and you don't need to make any changes.\n>\n> If you're using Cisco AnyConnect on Windows, you need to [add a DNS server](https://orkadocs.macstadium.com/docs/vpn-connect#configure-anyconnect-to-access-orka-via-custom-domain) to your network configuration. ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18510595"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"url": {
							"raw": "{{domain}}/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Retrieve a list of the users in the Orka environment.\n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header."
					},
					"response": [
						{
							"name": "Get users (some groups applied)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"user_count\": 2,\n    \"user_list\": [\n        \"{{email}}\",\n        \"{{newEmail}}\"\n    ],\n    \"user_groups\": {\n        \"$ungrouped\": [\n            \"{{newEmail}}\"\n        ],\n        \"{{userGroup}}\": [\n            \"{{email}}\"\n        ]\n    }\n}"
						},
						{
							"name": "Get users (no groups applied)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"user_count\": 2,\n    \"user_list\": [\n        \"{{email}}\",\n        \"{{newEmail}}\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);",
									"",
									"pm.environment.set(\"email\", req.email);",
									"pm.environment.set(\"password\", req.password);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (!environment.licenseKey) {",
									"    pm.environment.set(\"licenseKey\", \"orka-license-key\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"{{password}}\",\n\t\"email\": \"{{email}}\",\n\t\"group\": \"myUserGroup\"\n}"
						},
						"url": {
							"raw": "{{domain}}/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Create a new user in the Orka environment. You need to specify email address and password. You cannot pass an email address that's already in use.\n\n_Usage:_\n* `email`: Required. An email address for the user. This also serves as the username.\n* `password`: Required. A password for the user. Must be at least 6 characters long.\n* `group`: Optional. A user group for the user. Once set, you can no longer change the user group.\n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header."
					},
					"response": [
						{
							"name": "Create user (no group)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"{{password}}\",\n\t\"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-9CDfQlqugClMDRBC0Ax7v4ZJGXU\""
								},
								{
									"key": "Date",
									"value": "Mon, 22 Apr 2019 14:09:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"email\": \"{{email}}\"\n}"
						},
						{
							"name": "Create user (assign group)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\": \"{{password}}\",\n\t\"email\": \"{{email}}\",\n\t\"group\": \"{{userGroup}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"email\": \"{{email}}\",\n    \"group\": \"{{userGroup}}\"\n}"
						}
					]
				},
				{
					"name": "Delete user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/users/{{email}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users",
								"{{email}}"
							]
						},
						"description": "Delete the user specified in the endpoint. The user must have no Orka resources associated with them (other than their authentication tokens). This operation invalidates all tokens associated with the user.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Delete user",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/users/{{email}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users",
										"{{email}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"User {{email}} had no associated resources and has been deleted. User's tokens invalidated.\",\n    \"help\": {},\n    \"errors\": [],\n    \"user_deleted\": true\n}"
						}
					]
				},
				{
					"name": "Update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);",
									"",
									"pm.environment.set(\"email\", req.email);",
									"pm.environment.set(\"password\", req.password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{newEmail}}\",\n\t\"password\": \"{{newPassword}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/users",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Modify the email address or password of the current user. This operation is intended for regular Orka users.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Update password",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{newPassword}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"records_updated_count\": 1\n}"
						},
						{
							"name": "Update email",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{newEmail}}\",\n\t\"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "62"
								},
								{
									"key": "ETag",
									"value": "W/\"3e-FiucZKJMwmfKSItlQjJggmtAfy0\""
								},
								{
									"key": "Date",
									"value": "Mon, 22 Apr 2019 18:24:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"records_updated_count\": 1,\n    \"user_email\": \"{{newEmail}}\"\n}"
						}
					]
				},
				{
					"name": "Reset password (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var req = JSON.parse(request.data);",
									"",
									"pm.environment.set(\"password\", req.password);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{newPassword}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/users/password",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users",
								"password"
							]
						},
						"description": "Reset the password for the specified user. This operation is intended for administrators.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Reset password",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{newPassword}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users/password",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"message\": \"Password successfully reset.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Group users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "orka-licensekey",
								"value": "{{licenseKey}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{email}}\",\n    \"{{newEmail}}\"\n]"
						},
						"url": {
							"raw": "{{domain}}/users/groups/{{userGroup}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users",
								"groups",
								"{{userGroup}}"
							]
						},
						"description": "Apply a group label to the users specified by email. The specified users must exist on the Orka environment.\n\n> NOTE: This is a BETA feature.\n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header."
					},
					"response": [
						{
							"name": "Group users",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"{{email}}\",\n    \"{{newEmail}}\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users/groups/{{userGroup}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users",
										"groups",
										"{{userGroup}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"User group labels applied.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Ungroup users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"{{email}}\",\n    \"{{newEmail}}\"\n]"
						},
						"url": {
							"raw": "{{domain}}/users/groups/$ungrouped",
							"host": [
								"{{domain}}"
							],
							"path": [
								"users",
								"groups",
								"$ungrouped"
							]
						},
						"description": "Remove a group label from the users specified by email. The specified users must exist on the Orka environment.\n\n> NOTE: This is a BETA feature.\n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header."
					},
					"response": [
						{
							"name": "Ungroup users",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"{{email}}\",\n    \"{{newEmail}}\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/users/groups/$ungrouped",
									"host": [
										"{{domain}}"
									],
									"path": [
										"users",
										"groups",
										"$ungrouped"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"User group labels applied.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to user management operations. All requests, except `update user`, are administrative and require the `orka-license: <license>` header. This authentication method will be deprecated when user roles are rolled out.\n\nCurrently, Orka provides basic administrative user management. All users have the same roles and permissions over the Orka environment. In future versions, you will be able to assign user roles and limit user's permissions.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tokens",
			"item": [
				{
					"name": "Create token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = JSON.parse(responseBody);",
									"pm.environment.set(\"token\", body.token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/token",
							"host": [
								"{{domain}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Create an authentication token using an existing user's email and password.\n\nThis operation does not require authentication."
					},
					"response": [
						{
							"name": "Create token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{email}}\",\n\t\"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/token",
									"host": [
										"{{domain}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "176"
								},
								{
									"key": "ETag",
									"value": "W/\"b0-Xm0Olx97lPfgZAYdToF40XjwpeM\""
								},
								{
									"key": "Date",
									"value": "Thu, 21 Feb 2019 19:00:42 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"token\": \"{{token}}\"\n}"
						}
					]
				},
				{
					"name": "Revoke token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/token",
							"host": [
								"{{domain}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Revoke the token passed in the header.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Revoke token",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/token",
									"host": [
										"{{domain}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "19"
								},
								{
									"key": "ETag",
									"value": "W/\"13-tgioHzuZdhnR88Z2jUuPoKaxPiw\""
								},
								{
									"key": "Date",
									"value": "Fri, 29 Mar 2019 17:32:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"tokensRevoked\": 1\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to token management.\n\nTokens do not expire but administrators can revoke them. Tokens associated with a user are invalidated when the user is deleted.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "VMs",
			"item": [
				{
					"name": "List your VMs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{domain}}/resources/vm/list",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"list"
							]
						},
						"description": "Retrieve a list of the VMs and VM configurations associated with the token passed in the header. Orka returns detailed status and system information for all listed VMs.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List your VMs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1121"
								},
								{
									"key": "ETag",
									"value": "W/\"461-NrhudjdAW4Kt4kAAKtYYKfissRM\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:10:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"7.5G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                }\n            ]\n        },\n        {\n            \"virtual_machine_name\": \"{{vm}}1\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 6,\n            \"vcpu\": 6,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}1\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"tag\": \"{{nodeTag}}\",\n            \"tag_required\": false\n        }\n    ]\n}"
						},
						{
							"name": "List your VMs with scaled VMs collapsed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1121"
								},
								{
									"key": "ETag",
									"value": "W/\"461-NrhudjdAW4Kt4kAAKtYYKfissRM\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:10:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"7.5G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                },\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}1\",\n                    \"virtual_machine_id\": \"{{vmID}}1\",\n                    \"node_location\": \"multi\",\n                    \"node_status\": \"multi\",\n                    \"virtual_machine_ip\": \"multi\",\n                    \"vnc_port\": \"multi\",\n                    \"screen_sharing_port\": \"multi\",\n                    \"ssh_port\": \"multi\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"15.00G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}1\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"Scaled\",\n                    \"io_boost\": true,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [],\n                    \"creation_timestamp\": \"2022-02-10T14:01:26Z\",\n                    \"tag\": \"\",\n                    \"tag_required\": false,\n                    \"replicas\": 3\n                }\n            ]\n        },\n        {\n            \"virtual_machine_name\": \"{{vm}}2\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 6,\n            \"vcpu\": 6,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}2\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"tag\": \"{{nodeTag}}\",\n            \"tag_required\": false\n        }\n    ]\n}"
						},
						{
							"name": "List your VMs with scaled VMs expanded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/list?expand",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list"
									],
									"query": [
										{
											"key": "expand",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1121"
								},
								{
									"key": "ETag",
									"value": "W/\"461-NrhudjdAW4Kt4kAAKtYYKfissRM\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:10:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"7.5G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                },\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}1\",\n                    \"virtual_machine_id\": \"{{vmID}}1\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"15.00G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}1\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": true,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creation_timestamp\": \"2022-02-10T14:01:26Z\",\n                    \"tag\": \"\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                },\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}1\",\n                    \"virtual_machine_id\": \"{{vmID}}1\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"6000\",\n                    \"screen_sharing_port\": \"5901\",\n                    \"ssh_port\": \"8823\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"15.00G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}1\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": true,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 6000,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5901,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8823,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creation_timestamp\": \"2022-02-10T14:01:45Z\",\n                    \"tag\": \"\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                },\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}1\",\n                    \"virtual_machine_id\": \"{{vmID}}1\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"6001\",\n                    \"screen_sharing_port\": \"5902\",\n                    \"ssh_port\": \"8824\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"15.00G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}1\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": true,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 6001,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5902,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8824,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creation_timestamp\": \"2022-02-10T14:01:50Z\",\n                    \"tag\": \"\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                }\n            ]\n        },\n        {\n            \"virtual_machine_name\": \"{{vm}}2\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 6,\n            \"vcpu\": 6,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}2\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"tag\": \"{{nodeTag}}\",\n            \"tag_required\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all VMs (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "orka-licensekey",
								"value": "{{licenseKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/vm/list/all",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"list",
								"all"
							]
						},
						"description": "Retrieve a list of all VMs and VM configurations for all users in the Orka environment. This operation requires administrative privileges.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "List аll VMs (Admin)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/list/all",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2314"
								},
								{
									"key": "ETag",
									"value": "W/\"90a-hbIsDGI3tNWU+cMYDZojDAaKKwE\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Sep 2019 14:08:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 12,\n                    \"vcpu\": 12,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"30G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                }\n            ]\n        },\n        {\n            \"virtual_machine_name\": \"{{vm}}1\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{newEmail}}\",\n            \"cpu\": 12,\n            \"vcpu\": 12,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}1\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"tag\": \"{{nodeTag}}\",\n            \"tag_required\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List user's VMs (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/vm/list/{{email}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"list",
								"{{email}}"
							]
						},
						"description": "Retrieve a list of all VMs and VM configurations for the user specified in the endpoint. This operation requires administrative privileges.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "List VMs for another user (Admin)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/list/{{email}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list",
										"{{email}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "273"
								},
								{
									"key": "ETag",
									"value": "W/\"111-36FTs9JvE6zXL1kOmLywDT0tJ1A\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Sep 2019 14:06:40 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"5999\",\n                    \"screen_sharing_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"cpu\": 12,\n                    \"vcpu\": 12,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"30G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 5999,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5900,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8822,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false,\n                    \"replicas\": 1\n                }\n            ]\n        },\n        {\n            \"virtual_machine_name\": \"{{vm}}1\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 12,\n            \"vcpu\": 12,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"tag\": \"{{nodeTag}}\",\n            \"tag_required\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Check your VM status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/vm/status/{{vm}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"status",
								"{{vm}}"
							]
						},
						"description": "Get a detailed status of the VM specified by name or by ID in the endpoint. The VM must be associated with the token passed in the header.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Check VM status - Deployed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/status/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"status",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "245"
								},
								{
									"key": "ETag",
									"value": "W/\"f5-JX5nuNQSZaQM5V/WoR5L1oeFgQ4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:11:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"6001\",\n                    \"screen_sharing_port\": \"5902\",\n                    \"ssh_port\": \"8824\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"7.5G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 6001,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5902,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8824,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false\n                }\n            ]\n        }\n    ]\n}"
						},
						{
							"name": "Check VM status - Not Deployed with custom memory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/status/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"status",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 3,\n            \"vcpu\": 3,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"RAM\": \"10.00G\"\n        }\n    ]\n}"
						},
						{
							"name": "Check VM status - Not Deployed without custom memory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/status/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"status",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 3,\n            \"vcpu\": 3,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Check user's VM status (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/vm/status/{{vm}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"status",
								"{{vm}}"
							]
						},
						"description": "Get a detailed status of the VM specified by the name or by ID in the endpoint. The VM might belong to another user. This operation requires administrative privileges.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey:` and `Authorization: Bearer` headers."
					},
					"response": [
						{
							"name": "Check another user's VM status - Deployed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/status/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"status",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "245"
								},
								{
									"key": "ETag",
									"value": "W/\"f5-JX5nuNQSZaQM5V/WoR5L1oeFgQ4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:11:43 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Deployed\",\n            \"status\": [\n                {\n                    \"owner\": \"{{email}}\",\n                    \"virtual_machine_name\": \"{{vm}}\",\n                    \"virtual_machine_id\": \"{{vmID}}\",\n                    \"node_location\": \"{{node}}\",\n                    \"node_status\": \"UP\",\n                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                    \"vnc_port\": \"6001\",\n                    \"screen_sharing_port\": \"5902\",\n                    \"ssh_port\": \"8824\",\n                    \"cpu\": 3,\n                    \"vcpu\": 3,\n                    \"gpu\": \"N/A\",\n                    \"RAM\": \"7.5G\",\n                    \"base_image\": \"{{baseImage}}\",\n                    \"image\": \"{{vm}}\",\n                    \"configuration_template\": \"default\",\n                    \"vm_status\": \"running\",\n                    \"io_boost\": false,\n                    \"use_saved_state\": false,\n                    \"reserved_ports\": [\n                        {\n                            \"host_port\": 6001,\n                            \"guest_port\": 5999,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 5902,\n                            \"guest_port\": 5900,\n                            \"protocol\": \"TCP\"\n                        },\n                        {\n                            \"host_port\": 8824,\n                            \"guest_port\": 8821,\n                            \"protocol\": \"TCP\"\n                        }\n                    ],\n                    \"creationTimestamp\": \"2020-07-28T11:09:25Z\",\n                    \"tag\": \"{{nodeTag}}\",\n                    \"tag_required\": false\n                }\n            ]\n        }\n    ]\n}"
						},
						{
							"name": "Check another user's VM status - Not Deployed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/status/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"status",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"virtual_machine_resources\": [\n        {\n            \"virtual_machine_name\": \"{{vm}}\",\n            \"vm_deployment_status\": \"Not Deployed\",\n            \"owner\": \"{{email}}\",\n            \"cpu\": 3,\n            \"vcpu\": 3,\n            \"base_image\": \"{{baseImage}}\",\n            \"image\": \"{{vm}}\",\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"configuration_template\": \"default\",\n            \"RAM\": \"10.00G\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List your VM configurations",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/resources/vm/configs",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"configs"
							]
						},
						"description": "Retrieve a list of the VM configurations associated with the token passed in the header. Orka returns information about the base image, CPU cores, owner and name of the VM configurations.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List your VM configurations",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/configs",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"configs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "444"
								},
								{
									"key": "ETag",
									"value": "W/\"1bc-P9kumJZ3CjrSbbFe9vvE1rubZd0\""
								},
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2019 14:06:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"configs\": [\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_base_image\": \"{{baseImage}}\",\n            \"orka_cpu_core\": 6,\n            \"vcpu_count\": 6,\n            \"iso_image\": \"None\",\n            \"attached_disk\": \"None\",\n            \"vnc_console\": true,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"system_serial\": \"N/A\",\n            \"tag\": \"node-pool\",\n            \"tag_required\": false,\n            \"scheduler\": \"default\",\n            \"memory\": 10\n        },\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}1\",\n            \"orka_base_image\": \"{{baseImage}}\",\n            \"orka_cpu_core\": 3,\n            \"vcpu_count\": 3,\n            \"iso_image\": \"None\",\n            \"attached_disk\": \"None\",\n            \"vnc_console\": false,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"system_serial\": \"N/A\",\n            \"tag\": \"node-pool\",\n            \"tag_required\": false,\n            \"scheduler\": \"default\",\n            \"memory\": \"automatic\"\n        },\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}2\",\n            \"orka_base_image\": \"{{baseImage}}\",\n            \"orka_cpu_core\": 6,\n            \"vcpu_count\": 6,\n            \"iso_image\": \"None\",\n            \"attached_disk\": \"{{storageImage}}\",\n            \"vnc_console\": true,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"system_serial\": \"N/A\",\n            \"tag\": \"node-pool\",\n            \"tag_required\": false,\n            \"scheduler\": \"default\",\n            \"memory\": \"automatic\"\n        },\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}3\",\n            \"orka_base_image\": \"{{storageImage}}\",\n            \"orka_cpu_core\": 12,\n            \"vcpu_count\": 12,\n            \"iso_image\": \"{{iso}}\",\n            \"attached_disk\": \"None\",\n            \"vnc_console\": true,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"memory\": \"automatic\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get VM configuration by name",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/resources/vm/configs/{{vm}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"configs",
								"{{vm}}"
							]
						},
						"description": "Get information about the VM configuration specified in the endpoint. The VM configuration must be associated with the token passed in the header. \n\nOrka returns information about the base image, CPU cores, owner and name of the VM configuration.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Get VM configuration by name with custom memory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/configs/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"configs",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "180"
								},
								{
									"key": "ETag",
									"value": "W/\"b4-VsJENnPr4B7YDStj5V3cv24PuOw\""
								},
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2019 14:11:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"configs\": [\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_base_image\": \"{{baseImage}}\",\n            \"orka_cpu_core\": 6,\n            \"iso_image\": \"None\",\n            \"attached_disk\": \"None\",\n            \"vnc_console\": true,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"system_serial\": \"N/A\",\n            \"tag\": \"node-pool\",\n            \"tag_required\": false,\n            \"scheduler\": \"default\",\n            \"memory\": 10\n        }\n    ]\n}"
						},
						{
							"name": "Get VM configuration by name without custom memory",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/vm/configs/{{vm}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"configs",
										"{{vm}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "180"
								},
								{
									"key": "ETag",
									"value": "W/\"b4-VsJENnPr4B7YDStj5V3cv24PuOw\""
								},
								{
									"key": "Date",
									"value": "Thu, 03 Oct 2019 14:11:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"configs\": [\n        {\n            \"owner\": \"{{email}}\",\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_base_image\": \"{{baseImage}}\",\n            \"orka_cpu_core\": 6,\n            \"iso_image\": \"None\",\n            \"attached_disk\": \"None\",\n            \"vnc_console\": true,\n            \"io_boost\": false,\n            \"use_saved_state\": false,\n            \"gpu_passthrough\": false,\n            \"system_serial\": \"N/A\",\n            \"tag\": \"node-pool\",\n            \"tag_required\": false,\n            \"scheduler\": \"default\",\n            \"memory\": \"automatic\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Create VM configuration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 12,\n\t\"vcpu_count\": 12,\n\t\"iso_image\": \"{{iso}}\",\n\t\"attached_disk\": \"{{storageImage}}\",\n    \"system_serial\": \"{{systemSerial}}\",\n\t\"vnc_console\": true,\n    \"tag\": \"{{nodeTag}}\",\n    \"tag_required\": false,\n    \"scheduler\": \"default\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/create",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"create"
							]
						},
						"description": "Create a [VM configuration](https://orkadocs.macstadium.com/docs/orka-glossary#section-vm-configuration) that is ready for deployment. In Orka, VM configurations are container templates.\n\nYou can deploy multiple VMs from a single VM configuration. You cannot modify VM configurations.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   `orka_vm_name`: Required. The name of the VM configuration. This string must consist of lowercase Latin alphanumeric characters or the dash (`-`). This string must begin and end with an alphanumeric character. This string must not exceed 38 characters.\n*   `orka_base_image`: Required. The name of the base image that you want to use with the configuration.  \n    If you want to attach an ISO to the VM configuration from which to install macOS, make sure that the base image is an empty disk of a sufficient size.\n*   `orka_image`: Required. A name for the [snapshot image](https://orkadocs.macstadium.com/docs/orka-glossary#section-snapshot-image) of the VM. Typically, the same value as `orka_vm_name`.\n*   `orka_cpu_core`: Required. The number of CPU cores to dedicate for the VM. Must be 3, 4, 6, 8, 12, or 24.\n*   `vcpu_count`: Required. The number of vCPUs for the VM. Must equal the number of CPUs, when CPU is less than or equal to 3. Otherwise, must equal half of or exactly the number of CPUs specified.\n*   `iso_image`: Optional. An ISO to attach to the VM on deployment. The option is supported for VMs deployed on Intel nodes only.\n*   `attached_disk`: Optional. An additional storage disk to attach to the VM on deployment. The option is supported for VMs deployed on Intel nodes only.\n*   `vnc_console`: Optional. By default, `true`. Enables or disables VNC for the VM configuration. You can override on deployment of specific VMs. The option is supported for VMs deployed on Intel nodes only.\n*   `system_serial`: Optional. Assign an owned macOS system serial number to the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `io_boost`: Optional. By default, `false` for VM configurations created before Orka 1.5. Default value for VM configurations created with Orka 1.5 or later depends on the cluster default. Enables or disables IO performance improvements for the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `gpu_passthrough`: Optional. Enables or disables GPU passthrough for the VM. When enabled, `vnc_console` is automatically disabled. The option is supported for VMs deployed on Intel nodes only.\n    \n\n> **IMPORTANT** GPU passthrough must first be enabled in your cluster. Contact the [MacStadium team](https://portal.macstadium.com/login) for more details.\n\n*   `tag`: Optional. When specified, the VM is preferred to be deployed to a node marked with this tag.\n*   `tag_required`: Optional. By default, `false`. When set to `true`, the VM is required to be deployed to a node marked with this tag.\n*   `scheduler`: Optional. Possible values are `default` and `most-allocated`. By default, `default`. When set to `most-allocated` VMs deployed from the VM configuration will be scheduled to nodes having most of their resources allocated. `default` keeps used vs free resources balanced between the nodes."
					},
					"response": [
						{
							"name": "Create VM configuration with attached ISO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{storageImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n\t\"iso_image\": \"{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "ETag",
									"value": "W/\"148-fA6PVN+4I0P9g9krkNwq78LKurU\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:14:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create basic VM configuration from Intel image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create basic VM configuration from Apple Silicon image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{armBaseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with disabled VNC",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n\t\"vnc_console\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with attached disk",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n\t\"attached_disk\": \"{{storageImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with enabled IO Boost",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n\t\"io_boost\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with enabled GPU passthrough",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n\t\"gpu_passthrough\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with custom serial number",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n    \"system_serial\": \"{{systemSerial}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with node tag",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n    \"tag\": \"{{nodeTag}}\",\n    \"tag_required\": false\n}"
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "ETag",
									"value": "W/\"148-fA6PVN+4I0P9g9krkNwq78LKurU\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:14:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with VM scheduler",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n    \"scheduler\": \"most-allocated\"\n}"
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "ETag",
									"value": "W/\"148-fA6PVN+4I0P9g9krkNwq78LKurU\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:14:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Create VM configuration with custom memory",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_base_image\": \"{{baseImage}}\",\n\t\"orka_image\": \"{{vm}}\",\n\t\"orka_cpu_core\": 6,\n\t\"vcpu_count\": 6,\n    \"memory\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/create",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "328"
								},
								{
									"key": "ETag",
									"value": "W/\"148-fA6PVN+4I0P9g9krkNwq78LKurU\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:14:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully Created\",\n    \"help\": {\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Deploy VM configuration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\",\n\t\"replicas\": 2,\n\t\"reserved_ports\": [ \"<NODE PORT>:<VM PORT>\"],\n\t\"iso_install\": true,\n\t\"iso_image\": \"{{iso}}\",\n\t\"attach_disk\": true,\n\t\"attached_disk\": \"{{storageImage}}\",\n    \"system_serial\": \"{{systemSerial}}\",\n\t\"vnc_console\": true,\n\t\"gpu_passthrough\": false,\n\t\"vm_metadata\": { \"items\": [{\"key\": \"<KEY>\", \"value\": \"<VALUE>\"}] },\n    \"tag\": \"{{nodeTag}}\",\n    \"tag_required\": false,\n    \"scheduler\": \"default\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/deploy",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"deploy"
							]
						},
						"description": "Deploy an existing VM configuration to a node. If you don't specify a node, Orka chooses a node based on the available resources.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   `orka_vm_name`: Required. The name of the VM configuration that you want to deploy.\n*   `orka_node_name`: Optional. The name of the node on which to deploy the VM. The node must have sufficient CPU and memory to accommodate the VM.\n*   `replicas`: Optional. The scale at which to deploy the VM configuration. If not specified, defaults to `1` (non-scaled). The option is supported for VMs deployed on Intel nodes only.\n*   `reserved_ports`: Optional. One or more port mappings that enable additional ports on your VM. You need to map a port from the node to a port on the VM in the following format `:`. The following ports and port ranges are reserved and cannot be used: `22`, `443`, `6443`, `5000-5014`, `5999-6013`, `8822-8836`. You can pass multiple mappings, separated by a comma.\n*   `iso_install`: Optional. Set to `true` if you want to use an ISO. The option is supported for VMs deployed on Intel nodes only.\n*   `iso_image`: Optional. An ISO to attach to the VM during deployment. If already set in the respective VM configuration and not set here, Orka applies the setting from the VM configuration. You can also use this field to override any ISO specified in the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `attach_disk`: Optional. Set to `true` if you want to attach additional storage during deployment. The option is supported for VMs deployed on Intel nodes only.\n*   `attached_disk`: Optional. An additional storage disk to attach to the VM during deployment. If already set in the respective VM configuration and not set here, Orka applies the setting from the VM configuration. You can also use this field to override any storage specified in the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `vnc_console`: Optional. Enables or disables VNC for the VM. If not set in the VM configuration or here, defaults to `true`. If already set in the respective VM configuration and not set here, Orka applies the setting from the VM configuration. You can also use this field to override the VNC setting specified in the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `vm_metadata`: Optional. Inject custom metadata to the VM. You need to provide the metadata in format `\"items\": [{\"key\": \"\", \"value\": \"\"}]`. If not set, only the built-in metadata is injected into the VM. The option is supported for VMs deployed on Intel nodes only.\n*   `system_serial`: Optional. Assign an owned macOS system serial number to the VM. If already set in the respective VM configuration and not set here, Orka applies the setting from the VM configuration. The option is supported for VMs deployed on Intel nodes only.\n*   `gpu_passthrough`: Optional. Enables or disables GPU passthrough for the VM. If not set in the VM configuration or here, defaults to `false`. If already set in the respective VM configuration and not set here, Orka applies the setting from the VM configuration. You can also use this field to override the GPU passthrough setting specified in the VM configuration. When enabled, `vnc_console` is automatically disabled. The option is supported for VMs deployed on Intel nodes only.\n    \n\n> **IMPORTANT** GPU passthrough must first be enabled in your cluster. Contact the [MacStadium team](https://portal.macstadium.com/login) for more details.\n\n*   `tag`: Optional. When specified, the VM is preferred to be deployed to a node marked with this tag.\n*   `tag_required`: Optional. By default, `false`. When set to `true`, the VM is required to be deployed to a node marked with this tag.\n*   `scheduler`: Optional. Possible values are `default` and `most-allocated`. By default, `default`. When set to `most-allocated` The deployed VM will be scheduled to nodes having most of their resources allocated. `default` keeps used vs free resources balanced between the nodes."
					},
					"response": [
						{
							"name": "Deploy VM configuration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "859"
								},
								{
									"key": "ETag",
									"value": "W/\"35b-tcIgw2d9gIMgiIDZ7vU6hRF2wj8\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:19:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6000\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8823\",\n    \"screen_share_port\": \"5901\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6000\"\n}"
						},
						{
							"name": "Deploy VM configuration with custom serial number",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n    \"system_serial\": \"{{systemSerial}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "859"
								},
								{
									"key": "ETag",
									"value": "W/\"35b-tcIgw2d9gIMgiIDZ7vU6hRF2wj8\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:19:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n    },\n    \"errors\": [],\n    \"ram\": \"15.00G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8822\",\n    \"screen_share_port\": \"5900\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": true,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"5999\"\n}"
						},
						{
							"name": "Deploy VM configuration with attached ISO (enabled VNC)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"iso_install\": true,\n\t\"iso_image\": \"{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "831"
								},
								{
									"key": "ETag",
									"value": "W/\"33f-uiuq5BvSqIHLx/sbBkG8dVaZ5Go\""
								},
								{
									"key": "Date",
									"value": "Tue, 06 Aug 2019 18:13:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6000\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6000\"\n}"
						},
						{
							"name": "Deploy VM configuration with disabled VNC",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"vnc_console\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"VNC console not enabled\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8823\",\n    \"screen_share_port\": \"5901\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"N/A\"\n}"
						},
						{
							"name": "Deploy VM configuration on specific node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8822\",\n    \"screen_share_port\": \"5900\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"5999\"\n}"
						},
						{
							"name": "Deploy VM configuration with replicas",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"replicas\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"2 of 2 VMs deployed successfully.\",\n    \"help\": {},\n    \"errors\": [],\n    \"vm_id\": \"{{vmID}}\"\n}"
						},
						{
							"name": "Deploy VM configuration with custom ports",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"reserved_ports\": [ \"8000:80\", \"3000:3000\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6001\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6001\"\n}"
						},
						{
							"name": "Deploy VM configuration with attached disk (enabled VNC)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"attach_disk\": true,\n\t\"attached_disk\": \"{{storageImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8823\",\n    \"screen_share_port\": \"5901\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"vnc_port\": \"5999\",\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"attached_disk_info\": \"Successfully attached '{{storageImage}}'. Stop then start the VM for changes to take effect. If applicable, wait for iso installation to complete before restarting.\"\n}"
						},
						{
							"name": "Deploy VM configuration with custom metadata",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"vm_metadata\": { \"items\": [{\"key\": \"foo\", \"value\": \"bar\" }] }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6001\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6001\"\n}"
						},
						{
							"name": "Deploy VM configuration with enabled GPU passthrough",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"vnc_console\": false,\n    \"gpu_passthrough\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"VNC console not enabled\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8823\",\n    \"screen_share_port\": \"5901\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": false,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": true,\n    \"vnc_port\": \"N/A\"\n}"
						},
						{
							"name": "Deploy VM configuration with custom metadata",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"vm_metadata\": { \"items\": [{\"key\": \"foo\", \"value\": \"bar\" }] }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6001\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": true,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6001\"\n}"
						},
						{
							"name": "Deploy VM configuration with node tag",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"tag\": \"{{nodeTag}}\",\n    \"tag_required\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6001\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": true,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6001\"\n}"
						},
						{
							"name": "Deploy VM configuration with VM scheduler",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"scheduler\": \"most-allocated\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/deploy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"deploy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deployed VM\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:6001\"\n    },\n    \"errors\": [],\n    \"ram\": \"15G\",\n    \"vcpu\": \"6\",\n    \"host_cpu\": \"6\",\n    \"ip\": \"{{vmIP}}\",\n    \"ssh_port\": \"8824\",\n    \"screen_share_port\": \"5902\",\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": [],\n    \"io_boost\": true,\n    \"use_saved_state\": false,\n    \"gpu_passthrough\": false,\n    \"vnc_port\": \"6001\"\n}"
						}
					]
				},
				{
					"name": "Delete your VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/delete",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"delete"
							]
						},
						"description": "Remove one or more VMs specified by name or ID. The VMs must be associated with the token passed in the header.\n\nThis operation does not remove the VM configuration from which the VM was deployed. To delete the configuration as well, use `purge`.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header.\n\n_Usage:_\n- Specifying a VM ID (instead of name) deletes **only the VMs with that ID**. Multiple VMs might share the same ID if they have been deployed as replicas.\n- Specifying a VM name and a node deletes **all deployments with that name from that node**. You can delete by name and node only non-scaled VMs.\n- Specifying a VM name (without specifying a node) deletes **all deployments with that name**. You can delete by name only non-scaled VMs.\n\n> **IMPORTANT:** Always delete VMs in an `ERROR` state by ID."
					},
					"response": [
						{
							"name": "Delete VM by name",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "426"
								},
								{
									"key": "ETag",
									"value": "W/\"1aa-nJlhWuC5Qil21VVBvyJSL3d4Pp4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:23:11 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted VM\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Delete VM by ID",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "402"
								},
								{
									"key": "ETag",
									"value": "W/\"192-aqrPwdTYQuooPYY3Ipu9GUb4i6Q\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:26:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted VM\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Delete user's VM (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/delete",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"delete"
							]
						},
						"description": "Remove one or more deployed VMs of another user from a node. This operation requires administrative privileges.\n\nThis operation does not remove the VM configuration from which the VM was deployed. To delete the configuration as well, use `purge`.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers.\n\n_Usage:_\n- Specifying a VM ID (instead of name) deletes **only the VMs with that ID**. Multiple VMs might share the same ID if they have been deployed as replicas.\n- Specifying a VM name and a node deletes **all deployments with that name from that node**. You can delete by name and node only non-scaled VMs.\n- Specifying a VM name (without specifying a node) deletes **all deployments with that name**. You can delete by name only non-scaled VMs.\n\n> **IMPORTANT:** Always delete VMs in an `ERROR` state by ID."
					},
					"response": [
						{
							"name": "Delete VM for another user by name (Admin)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "374"
								},
								{
									"key": "ETag",
									"value": "W/\"176-8K4I1/mqV070UFZQ8sWFwVDogmo\""
								},
								{
									"key": "Date",
									"value": "Thu, 19 Sep 2019 14:38:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted VM\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Delete VM for another user by name and node (Admin)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted virtual machine\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Delete VM for another user by ID (Admin)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted virtual machine\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"deploy_virtual_machine\": \"To deploy a virtual machine, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Purge your VMs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/purge",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"purge"
							]
						},
						"description": "Remove all VMs and VM configurations with the specified name. The specified VMs and VM configurations must be associated with the token passed in the header.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Purge",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/purge",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"purge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "715"
								},
								{
									"key": "ETag",
									"value": "W/\"2cb-hSoTtSJ6cmuKH6sqMQqZC2s5Z2A\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:29:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully purged VM\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"create_virtual_machine_configuration\": \"To create a VM configuration, please use the endpoint {{domain}}/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Purge user's VMs (Admin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/purge",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"purge"
							]
						},
						"description": "Remove all VMs and VM configurations (of another user) with the specified name. This operation requires administrative privileges.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Purge for another user (Admin)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/purge",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"purge"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "715"
								},
								{
									"key": "ETag",
									"value": "W/\"2cb-hSoTtSJ6cmuKH6sqMQqZC2s5Z2A\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:29:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully purged virtual machine\",\n    \"help\": {\n        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint {{domain}}/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Start VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/exec/start",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"exec",
								"start"
							]
						},
						"description": "> **NOTE:** This request is supported for VMs deployed on Intel nodes only\n\nPower ON the VM specified by name or ID.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   When you specify the VM by name, you need to specify a node as well. This starts all VMs with the specified name on the specified node.\n*   When you specify the VM by ID, you don't need to specify the node."
					},
					"response": [
						{
							"name": "Start VM by name and node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/start",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "875"
								},
								{
									"key": "ETag",
									"value": "W/\"36b-pSI2AQQ2LA2jg5/np+5P9JCiNoc\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:44:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vm}} has started on {{node}}\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access this VM via {{vmIP}}\"\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Start VM by ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/start",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "732"
								},
								{
									"key": "ETag",
									"value": "W/\"2dc-0vIm+WWrlc5vpljXIyHhGfbpZm0\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:11:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vmID}} has started on node\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Stop VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/exec/stop",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"exec",
								"stop"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nPower OFF the VM specified by name and node or by ID.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   When you specify the VM by name, you need to specify a node as well. This stops all VMs with the specified name on the specified node.\n*   When you specify the VM by ID, you don't need to specify the node."
					},
					"response": [
						{
							"name": "Stop VM by ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/stop",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"stop"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "732"
								},
								{
									"key": "ETag",
									"value": "W/\"2dc-+ylKwhDiyVHeRI2EJeh54iROblI\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:12:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vmID}} has stopped on node\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Stop VM by name and node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/stop",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"stop"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "875"
								},
								{
									"key": "ETag",
									"value": "W/\"36b-S9XFfT9/TUcbuvGmwCXEFM/yNf4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:43:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vm}} has stopped on {{node}}\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access this VM via {{vmIP}}\"\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Suspend VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/exec/suspend",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"exec",
								"suspend"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nSuspend the VM specified by name or ID.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   When you specify the VM by name, you need to specify a node as well. This suspends all VMs with the specified name on the specified node.\n*   When you specify the VM by ID, you don't need to specify the node."
					},
					"response": [
						{
							"name": "Suspend VM by ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/suspend",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"suspend"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "739"
								},
								{
									"key": "ETag",
									"value": "W/\"2e3-mxlt+DULIo1/lkt3h4b9npCjoao\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:51:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vmID}} has been suspended on node\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Suspend VM by name and node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/suspend",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"suspend"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "877"
								},
								{
									"key": "ETag",
									"value": "W/\"36d-9ojeTay97Zb4Mfctfvgo3utqWs4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:42:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vm}} has been suspended on {{node}}\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access this VM via {{vmIP}}\"\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Resume VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/exec/resume",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"exec",
								"resume"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nResume the VM specified by name or ID. The VM must already be suspended.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   When you specify the VM by name, you need to specify a node as well. This resumes all VMs with the specified name on the specified node.\n*   When you specify the VM by ID, you don't need to specify the node."
					},
					"response": [
						{
							"name": "Resume VM by name and node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/resume",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"resume"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "870"
								},
								{
									"key": "ETag",
									"value": "W/\"366-eVJUZmqBGwMXdZtf3shY9ZkeGa4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:43:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vm}} has resumed on {{node}}\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access this VM via {{vmIP}}\"\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Resume VM by ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/resume",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"resume"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "732"
								},
								{
									"key": "ETag",
									"value": "W/\"2dc-ybHAWIXP3Juk1bHAzdcfmxY4SGI\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:50:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"{{vmID}} has resumed on node\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Revert VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/exec/revert",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"exec",
								"revert"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nRevert the specified VM to the latest state of its base image. This operation restarts the VM. You can specify the VM by name, name and node, or ID.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header.\n\n*Usage:*\n\n*   When you specify the VM by name and there are multiple VMs with that name, you need to specify a node as well. This reverts all VMs with the specified name on the specified node.\n*   When you specify the VM by ID, you don't need to specify the node."
					},
					"response": [
						{
							"name": "Revert VM by ID",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/revert",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"revert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "732"
								},
								{
									"key": "ETag",
									"value": "W/\"2dc-ybHAWIXP3Juk1bHAzdcfmxY4SGI\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:50:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully reverted {{vmID}} on node\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\"\n        }\n    },\n    \"errors\": []\n}"
						},
						{
							"name": "Revert VM by name and node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vm}}\",\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/exec/revert",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"exec",
										"revert"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "870"
								},
								{
									"key": "ETag",
									"value": "W/\"366-eVJUZmqBGwMXdZtf3shY9ZkeGa4\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 16:43:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully reverted {{vm}} on {{node}}\",\n    \"help\": {\n        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n        \"revert_virtual_machine\": \"To revert a VM send rest request to {{domain}}/resources/vm/exec/revert\",\n        \"save_virtual_machine_state\": \"To save a VM config state using an already deployed VM send rest request to {{domain}}/resources/vm/configs/save-state\",\n        \"data_for_virtual_machine_exec_tasks\": {\n            \"orka_vm_name\": \"{{vm}}\",\n            \"orka_node_name\": \"{{node}}\"\n        },\n        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access this VM via {{vmIP}}\"\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "List disks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/list-disks",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"list-disks"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nList the disks attached to the VM specified by ID. The VM must be deployed. The VM must be non-scaled.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "List disks",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/list-disks",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"list-disks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"drives\": [\n        {\n            \"type\": \"file\",\n            \"device\": \"disk\",\n            \"target\": \"sda\",\n            \"source\": \"{{vm}}\"\n        },\n        {\n            \"type\": \"file\",\n            \"device\": \"disk\",\n            \"target\": \"sdb\",\n            \"source\": \"bootloader\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Attach disk",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"image_name\": \"{{storageImage}}\",\n\t\"mount_point\": \"sd[c-z]\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/attach-disk",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"attach-disk"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nAttach a disk to the VM specified by ID. The VM must be deployed. The VM must be non-scaled.\n\nYou can attach any of the following disks:\n\n*   Any disks created with `orka image generate`.\n*   Any non-bootable images available in your Orka storage and listed by `orka image list`.\n    \n\n> **IMPORTANT:** Before you can use the attached disk, you need to restart the VM with a [manual stop](https://documenter.getpostman.com/view/6574930/S1ETRGzt?version=latest#f312bc33-e0f2-4726-b926-4969e51f7d43) of the VM, followed by a [manual start](https://documenter.getpostman.com/view/6574930/S1ETRGzt?version=latest#a8add7c1-d3a0-43e0-a6cb-205637468ba2) VM. A software reboot from the OS will not trigger macOS to recognize the disk.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Attach disk",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"image_name\": \"{{storageImage}}\",\n\t\"mount_point\": \"sdc\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/attach-disk",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"attach-disk"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Succesfully Attached\",\n    \"help\": {},\n    \"errors\": [],\n    \"deploy_virtual_machine\": \"Start and stop the machine using \\\"orka vm start/stop\\\" for changes to take effect\"\n}"
						}
					]
				},
				{
					"name": "Scale VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"replicas\": 5\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/scale",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"scale"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nScale a deployed VM to the specified number of replicas. You must specify the VM by ID. The VM must be deployed.\n\nWhen you are working with scaled VMs, the following limitations are in place:\n\n*   Some operations are not available for scaled VMs (saving an image, committing changes to a base image, cloning a VM, migrating a VM).\n*   If you specify a node during deployment, scaling is limited to the resources of that node and will not create new replicas on other nodes.\n*   All replicas share the same ID.\n*   To view detailed information about each replica, you need to send a GET request to the `/resources/vm/status/` endpoint.\n*   When you scale down, you have no control over which replicas will be destroyed and which ones will be preserved. This might result in loss of data.\n*   When you scale up, newly deployed replicas use the base image of the original VM config. Changes from any other running replicas are not applied to the new replicas.\n*   You can delete replicas only by ID. This operation deletes all replicas with the specified ID.\n    \n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Scale VM",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"replicas\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/scale",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"scale"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Scaled to 5 VMs\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Un-scale VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"replicas\": 1\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/scale",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"scale"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nUn-scale a scaled VM. This removes any additional replicas of the VM and leaves only one running copy. You must specify the VM by ID. The VM must be deployed.\n\nWhen you scale down, you have no control over which replicas will be destroyed and which one will be preserved. This might result in loss of data.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Un-scale VM",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"replicas\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/scale",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"scale"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Scaled to 1 VMs\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Migrate VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n    \"current_node_name\": \"{{node}}\",\n    \"new_nodes\": [\"{{newNode}}\"]\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/migrate",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"migrate"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nMigrate a deployed VM from a selected source node (`current_node_name`) to another destination node (`new_nodes`). You must specify the VM by ID. You can set only one destination node. The destination node should be different from the source node.\n\nThis operation changes the IP of the migrated VM and might change its assigned ports. This operation removes the VM from the source node.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Migrate VM",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n    \"current_node_name\": \"{{node}}\",\n    \"new_nodes\": [\"{{newNode}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/migrate",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"migrate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Migrated vm\",\n    \"help\": {},\n    \"errors\": [],\n    \"vm_id\": \"{{vmID}}\",\n    \"port_warnings\": []\n}"
						}
					]
				},
				{
					"name": "Clone VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n    \"current_node_name\": \"{{node}}\",\n    \"new_nodes\": [\"{{newNode}}\"]\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/clone",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"clone"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nClone a deployed VM from a selected source node (`current_node_name`) to a destination node (`new_nodes`). You must specify the VM by ID. You can set only one destination node.\n\nThis operation retains the VM on the source node. The clone receives a new ID and might receive a new IP and assigned ports, based on the destination node.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Clone VM to the same node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n    \"current_node_name\": \"{{node}}\",\n    \"new_nodes\": [\"{{node}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/clone",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"clone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Cloned vm\",\n    \"help\": {},\n    \"errors\": [],\n    \"vm_id\": \"cebed25ee20b4\",\n    \"port_warnings\": []\n}"
						},
						{
							"name": "Clone VM to another node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n    \"current_node_name\": \"{{node}}\",\n    \"new_nodes\": [\"{{newNode}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/clone",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"clone"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Cloned vm\",\n    \"help\": {},\n    \"errors\": [],\n    \"vm_id\": \"cebed25ee20b4\",\n    \"port_warnings\": []\n}"
						}
					]
				},
				{
					"name": "Save VM State",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/vm/configs/save-state",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"configs",
								"save-state"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nSave a VM configuration state (disk and memory). You must specify the VM by ID. Now when you deploy the VM configuration it will use the saved state to boot the VM.\n\nThe VM must be deployed. If VM state is previously saved, it is overwritten. To overwrite the VM state, it must not be used by any deployed VM.\n\n> **NOTE:** Saving VM state is restricted only to VMs that have GPU passthrough disabled.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Save VM State",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/configs/save-state",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"configs",
										"save-state"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully saved VM configuration state.\",\n    \"help\": {\n        \"info\": \"Deploying a VM from VM configuration '{{vm}}' will now boot from the saved state\"\n    },\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Delete VM State",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{domain}}/resources/vm/configs/{{vm}}/delete-state",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"vm",
								"configs",
								"{{vm}}",
								"delete-state"
							]
						},
						"description": "> **NOTE**: This request is supported for VMs deployed on Intel nodes only.\n\nDelete a VM configuration state. You must specify the VM in the request URL by name. Now when you deploy the VM configuration it will use the base image to boot the VM.\n\nTo delete a VM state, it must not be used by any deployed VM.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Delete VM State",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/vm/configs/{{vm}}/delete-state",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"vm",
										"configs",
										"{{vm}}",
										"delete-state"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted the VM configuration state\",\n    \"help\": {\n        \"info\": \"Deploying a VM from VM configuration '{{vm}}' will now boot from the base image\"\n    },\n    \"errors\": []\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to the management and life cycle of virtual machines and virtual machine configurations in Orka.\n\nA **VM configuration** is a template configuration (a container template) consisting of a base image, a snapshot image, and the number of CPU cores to be used. To become a VM that you can run in the cloud, a VM configuration needs to be deployed to a node.\n\nA **VM** is a virtual machine deployed on a node from an existing VM configuration or cloned from an existing virtual machine. In the case of macOS VMs, this is a full macOS VM inside of a Docker container.\n\nYou can deploy multiple VMs from a single VM configuration. Once created, you can no longer modify a VM configuration.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Nodes",
			"item": [
				{
					"name": "List nodes",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/node/list",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"list"
							]
						},
						"description": "Retrieve a list of the nodes in your Orka environment. Orka returns a list of nodes with IP and resource information.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List nodes (some dedicated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {\n        \"check_orka_node_status\": \"To check orka node status for a single node use endpoint http://10.221.188.100/resources/node/status/<NODE_NAME>\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint http://10.221.188.100/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine node, make sure you have a configuration created and use the endpoint http://10.221.188.100/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": [],\n    \"nodes\": [\n        {\n            \"name\": \"macpro-1\",\n            \"host_name\": \"macpro-1\",\n            \"address\": \"10.221.188.4\",\n            \"hostIP\": \"10.221.188.4\",\n            \"available_cpu\": 17,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"47.49G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-2\",\n            \"host_name\": \"macpro-2\",\n            \"address\": \"10.221.188.5\",\n            \"hostIP\": \"10.221.188.5\",\n            \"available_cpu\": 23,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"62.23G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_group\": \"{{userGroup}}\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-3\",\n            \"host_name\": \"macpro-3\",\n            \"address\": \"10.221.188.6\",\n            \"hostIP\": \"10.221.188.6\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"23.72G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_group\": \"{{userGroup}}\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-15\",\n            \"host_name\": \"mini-arm-15\",\n            \"address\": \"10.221.188.15\",\n            \"hostIP\": \"10.221.188.15\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-16\",\n            \"host_name\": \"mini-arm-16\",\n            \"address\": \"10.221.188.16\",\n            \"hostIP\": \"10.221.188.16\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        }\n    ]\n}"
						},
						{
							"name": "List nodes (none dedicated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1227"
								},
								{
									"key": "ETag",
									"value": "W/\"4cb-LcBj6ZxvJc12Mchuwg5oe8RNn1Q\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:12:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {\n        \"check_orka_node_status\": \"To check orka node status for a single node use endpoint {{domain}}/resources/node/status/<NODE_NAME>\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint {{domain}}/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine node, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": [],\n    \"nodes\": [\n        {\n            \"name\": \"macpro-1\",\n            \"host_name\": \"macpro-1\",\n            \"address\": \"10.221.188.4\",\n            \"hostIP\": \"10.221.188.4\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"32.49G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-2\",\n            \"host_name\": \"macpro-2\",\n            \"address\": \"10.221.188.5\",\n            \"hostIP\": \"10.221.188.5\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"32.72G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-3\",\n            \"host_name\": \"macpro-3\",\n            \"address\": \"10.221.188.6\",\n            \"hostIP\": \"10.221.188.6\",\n            \"available_cpu\": 12,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"allocatable_cpu\": 24,\n            \"available_memory\": \"32.23G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-15\",\n            \"host_name\": \"mini-arm-15\",\n            \"address\": \"10.221.188.15\",\n            \"hostIP\": \"10.221.188.15\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-16\",\n            \"host_name\": \"mini-arm-16\",\n            \"address\": \"10.221.188.16\",\n            \"hostIP\": \"10.221.188.16\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        }\n    ]\n}"
						},
						{
							"name": "List nodes (some sandboxed)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										""
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {\n        \"check_orka_node_status\": \"To check orka node status for a single node use endpoint http://10.221.188.100/resources/node/status/<NODE_NAME>\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint http://10.221.188.100/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine node, make sure you have a configuration created and use the endpoint http://10.221.188.100/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": [],\n    \"nodes\": [\n        {\n            \"name\": \"macpro-1\",\n            \"host_name\": \"macpro-1\",\n            \"address\": \"10.221.188.4\",\n            \"hostIP\": \"10.221.188.4\",\n            \"available_cpu\": 17,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"47.49G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-2\",\n            \"host_name\": \"macpro-2\",\n            \"address\": \"10.221.188.5\",\n            \"hostIP\": \"10.221.188.5\",\n            \"available_cpu\": 23,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"62.23G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"SANDBOX\",\n            \"state\": \"SANDBOX\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-3\",\n            \"host_name\": \"macpro-3\",\n            \"address\": \"10.221.188.6\",\n            \"hostIP\": \"10.221.188.6\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"23.72G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-15\",\n            \"host_name\": \"mini-arm-15\",\n            \"address\": \"10.221.188.15\",\n            \"hostIP\": \"10.221.188.15\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-16\",\n            \"host_name\": \"mini-arm-16\",\n            \"address\": \"10.221.188.16\",\n            \"hostIP\": \"10.221.188.16\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        }\n    ]\n}"
						},
						{
							"name": "List nodes (some tagged)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"list"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {\n        \"check_orka_node_status\": \"To check orka node status for a single node use endpoint http://10.221.188.100/resources/node/status/<NODE_NAME>\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint http://10.221.188.100/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine node, make sure you have a configuration created and use the endpoint http://10.221.188.100/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": [],\n    \"nodes\": [\n        {\n            \"name\": \"macpro-1\",\n            \"host_name\": \"macpro-1\",\n            \"address\": \"10.221.188.4\",\n            \"hostIP\": \"10.221.188.4\",\n            \"available_cpu\": 17,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"47.49G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": [\n                \"{{tagName}}\",\n                \"some-tag\"\n            ]\n        },\n        {\n            \"name\": \"macpro-2\",\n            \"host_name\": \"macpro-2\",\n            \"address\": \"10.221.188.5\",\n            \"hostIP\": \"10.221.188.5\",\n            \"available_cpu\": 23,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"62.23G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": [\n                \"{{tagName}}\"\n            ]\n        },\n        {\n            \"name\": \"macpro-3\",\n            \"host_name\": \"macpro-3\",\n            \"address\": \"10.221.188.6\",\n            \"hostIP\": \"10.221.188.6\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 24,\n            \"available_gpu\": \"1\",\n            \"allocatable_gpu\": \"1\",\n            \"available_memory\": \"23.72G\",\n            \"total_cpu\": 24,\n            \"total_memory\": \"62.92G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-15\",\n            \"host_name\": \"mini-arm-15\",\n            \"address\": \"10.221.188.15\",\n            \"hostIP\": \"10.221.188.15\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-16\",\n            \"host_name\": \"mini-arm-16\",\n            \"address\": \"10.221.188.16\",\n            \"hostIP\": \"10.221.188.16\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all nodes (Admin)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							},
							{
								"key": "orka-licensekey",
								"value": "{{licenseKey}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/node/list/all",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"list",
								"all"
							]
						},
						"description": "Retrieve a list of the nodes in your Orka environment. Orka returns a list of nodes with IP and resource information.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List all nodes",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/list/all",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"list",
										"all"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {\n        \"check_orka_node_status\": \"To check orka node status for a single node use endpoint http://10.221.188.100/resources/node/status/<NODE_NAME>\",\n        \"create_virtual_machine_configuration\": \"To create a virtual machine configuration, please use the endpoint http://10.221.188.100/resources/vm/create\",\n        \"required_request_data_for_create\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_base_img\": \"<ORKA_BASE_IMG>\",\n            \"orka_image\": \"<ORKA_IMAGE>\"\n        },\n        \"deploy_virtual_machine\": \"To deploy a virtual machine node, make sure you have a configuration created and use the endpoint http://10.221.188.100/resources/vm/deploy\",\n        \"required_request_data_for_deploy\": {\n            \"orka_vm_name\": \"<ORKA_VM_NAME>\",\n            \"orka_node_name\": \"<ORKA_NODE_NAME>\"\n        }\n    },\n    \"errors\": [],\n    \"nodes\": [\n        {\n            \"name\": \"macpro-1\",\n            \"host_name\": \"macpro-1\",\n            \"address\": \"10.221.188.11\",\n            \"hostIP\": \"10.221.188.11\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 12,\n            \"available_gpu\": 1,\n            \"allocatable_gpu\": 1,\n            \"available_memory\": \"31.18G\",\n            \"total_cpu\": 12,\n            \"total_memory\": \"31.38G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-2\",\n            \"host_name\": \"macpro-2\",\n            \"address\": \"10.221.188.12\",\n            \"hostIP\": \"10.221.188.12\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 12,\n            \"available_gpu\": 1,\n            \"allocatable_gpu\": 1,\n            \"available_memory\": \"31.18G\",\n            \"total_cpu\": 12,\n            \"total_memory\": \"31.38G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"macpro-3\",\n            \"host_name\": \"macpro-3\",\n            \"address\": \"10.221.188.13\",\n            \"hostIP\": \"10.221.188.13\",\n            \"available_cpu\": 12,\n            \"allocatable_cpu\": 12,\n            \"available_gpu\": 1,\n            \"allocatable_gpu\": 1,\n            \"available_memory\": \"31.18G\",\n            \"total_cpu\": 12,\n            \"total_memory\": \"31.38G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"master-1\",\n            \"host_name\": \"master-1\",\n            \"address\": \"10.221.188.5\",\n            \"hostIP\": \"10.221.188.5\",\n            \"available_cpu\": 1,\n            \"allocatable_cpu\": 2,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"3.40G\",\n            \"total_cpu\": 2,\n            \"total_memory\": \"3.83G\",\n            \"node_type\": \"FOUNDATION\",\n            \"state\": \"FOUNDATION\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"master-2\",\n            \"host_name\": \"master-2\",\n            \"address\": \"10.221.188.6\",\n            \"hostIP\": \"10.221.188.6\",\n            \"available_cpu\": 1,\n            \"allocatable_cpu\": 2,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"3.14G\",\n            \"total_cpu\": 2,\n            \"total_memory\": \"3.83G\",\n            \"node_type\": \"FOUNDATION\",\n            \"state\": \"FOUNDATION\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"master-3\",\n            \"host_name\": \"master-3\",\n            \"address\": \"10.221.188.7\",\n            \"hostIP\": \"10.221.188.7\",\n            \"available_cpu\": 1,\n            \"allocatable_cpu\": 2,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"3.63G\",\n            \"total_cpu\": 2,\n            \"total_memory\": \"3.83G\",\n            \"node_type\": \"FOUNDATION\",\n            \"state\": \"FOUNDATION\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-15\",\n            \"host_name\": \"mini-arm-15\",\n            \"address\": \"10.221.188.15\",\n            \"hostIP\": \"10.221.188.15\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        },\n        {\n            \"name\": \"mini-arm-16\",\n            \"host_name\": \"mini-arm-16\",\n            \"address\": \"10.221.188.16\",\n            \"hostIP\": \"10.221.188.16\",\n            \"available_cpu\": 8,\n            \"allocatable_cpu\": 8,\n            \"available_gpu\": \"N/A\",\n            \"allocatable_gpu\": \"N/A\",\n            \"available_memory\": \"15.39G\",\n            \"total_cpu\": 8,\n            \"total_memory\": \"15.39G\",\n            \"node_type\": \"WORKER\",\n            \"state\": \"READY\",\n            \"orka_tags\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Check node status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/node/status/{{node}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"status",
								"{{node}}"
							]
						},
						"description": "Get a detailed status of the node specified by name in the endpoint. `cpu` and `memory` list the available amounts of the respective node resources.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Check node status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/status/{{node}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"status",
										"{{node}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "117"
								},
								{
									"key": "ETag",
									"value": "W/\"75-AUJfzWPB09XjcAknoCaIo6Mzncc\""
								},
								{
									"key": "Date",
									"value": "Wed, 26 Jun 2019 15:16:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"node_status\": {\n        \"status\": \"READY\",\n        \"cpu\": \"24\",\n        \"gpu\": 1,\n        \"memory\": \"60G\",\n        \"nodeName\": \"{{node}}\",\n        \"sandbox\": \"false\",\n        \"nodeType\": \"WORKER\"\n    }\n}"
						},
						{
							"name": "Check node status (sandboxed)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/status/{{node}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"status",
										"{{node}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"node_status\": {\n        \"status\": \"SANDBOX\",\n        \"cpu\": 7,\n        \"gpu\": 1,\n        \"memory\": \"25.804G\",\n        \"nodeName\": \"{{node}}\",\n        \"sandbox\": \"true\",\n        \"nodeType\": \"SANDBOX\"\n    }\n}"
						},
						{
							"name": "Check node status (foundation)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/node/status/{{node}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"status",
										"{{node}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"node_status\": {\n        \"status\": \"FOUNDATION\",\n        \"cpu\": 7,\n        \"gpu\": 1,\n        \"memory\": \"25.804G\",\n        \"nodeName\": \"{{node}}\",\n        \"sandbox\": \"false\",\n        \"nodeType\": \"FOUNDATION\"\n    }\n}"
						}
					]
				},
				{
					"name": "List ports",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/ports",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"ports"
							]
						},
						"description": "Get a detailed list of all reserved ports on all nodes in your Orka environment. Orka lists them as port mappings between `host_port` and `guest_port`. `host_port` indicates a port on the node, `guest_port` indicates a port on a VM on this node.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List ports",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/ports",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"ports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "616"
								},
								{
									"key": "ETag",
									"value": "W/\"268-SaxnyyXclTk+x6JhLK2C8hCyJ80\""
								},
								{
									"key": "Date",
									"value": "Tue, 06 Aug 2019 14:04:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"reserved_ports\": [\n        {\n            \"host_port\": 5999,\n            \"guest_port\": 5999,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-3\"\n        },\n        {\n            \"host_port\": 5900,\n            \"guest_port\": 5900,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-3\"\n        },\n        {\n            \"host_port\": 8822,\n            \"guest_port\": 8821,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-3\"\n        },\n        {\n            \"host_port\": 5999,\n            \"guest_port\": 5999,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-1\"\n        },\n        {\n            \"host_port\": 5900,\n            \"guest_port\": 5900,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-1\"\n        },\n        {\n            \"host_port\": 8822,\n            \"guest_port\": 8821,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-1\"\n        },\n        {\n            \"host_port\": 5999,\n            \"guest_port\": 5999,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-2\"\n        },\n        {\n            \"host_port\": 5900,\n            \"guest_port\": 5900,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-2\"\n        },\n        {\n            \"host_port\": 8822,\n            \"guest_port\": 8821,\n            \"protocol\": \"TCP\",\n            \"orka_node_name\": \"macpro-2\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Enable sandbox",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "orka-licensekey",
								"value": "orka-license-key",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/node/sandbox",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"sandbox"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel nodes only.\n\nTag the specified node as sandbox. This limits deployment management from the Orka CLI. You can perform only Kubernetes deployment management with `kubectl`, [Helm](https://helm.sh/docs/helm/#helm), and Tiller.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey:` and `Authorization: Bearer` headers."
					},
					"response": [
						{
							"name": "Enable sandbox",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "orka-license-key"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/sandbox",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"sandbox"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully tagged node sandbox\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Disable sandbox",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "orka-licensekey",
								"value": "orka-license-key",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/node/sandbox",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"sandbox"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel nodes only.\n\nRemove the sandbox tag for the specified node. This re-enables deployment management with the Orka CLI.\n\nThis operation requires both token and license authentication. You need to pass both the orka-licensekey: and Authorization: Bearer headers."
					},
					"response": [
						{
							"name": "Disable sandbox",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "orka-license-key",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/sandbox",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"sandbox"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully untagged node sandbox\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Dedicate node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = JSON.parse(responseBody);",
									"",
									"// pm.environment.set(\"vm_id_two\", body.vm_id);",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"Expect deployed successfully message\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.message).to.eql('Successfully deployed VM');",
									"// });",
									"",
									"// setTimeout(function() {}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t\"{{node}}\",\n\t\"macpro-2\"\n]"
						},
						"url": {
							"raw": "{{domain}}/resources/node/groups/{{userGroup}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"groups",
								"{{userGroup}}"
							]
						},
						"description": "Dedicate the node(s) specified in the body to the user group specified in the endpoint. Only users from the specified user group will be able to deploy to the node.\n\n> NOTE: This is a BETA feature.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Dedicate node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t\"{{node}}\",\n\t\"macpro-2\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/groups/{{userGroup}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"groups",
										"{{userGroup}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"details\": [\n        {\n            \"node\": \"{{node}}\",\n            \"detail\": \"Group <{{userGroup}}> successfully applied to node <{{node}}>.\"\n        },\n        {\n            \"node\": \"macpro-2\",\n            \"detail\": \"Group <{{userGroup}}> successfully applied to node <macpro-2>.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Remove node dedication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var body = JSON.parse(responseBody);",
									"",
									"// pm.environment.set(\"vm_id_two\", body.vm_id);",
									"// pm.test(\"Status code is 200\", function () {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test(\"Expect deployed successfully message\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.message).to.eql('Successfully deployed VM');",
									"// });",
									"",
									"// setTimeout(function() {}, 500);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t\"{{node}}\",\n\t\"macpro-2\"\n]"
						},
						"url": {
							"raw": "{{domain}}/resources/node/groups/$ungrouped",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"groups",
								"$ungrouped"
							]
						},
						"description": "Make the node(s) specified in the body available to all users.\n\n> NOTE: This is a BETA feature.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Remove node dedication",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t\"{{node}}\",\n\t\"macpro-2\"\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/groups/$ungrouped",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"groups",
										"$ungrouped"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"details\": [\n        {\n            \"node\": \"{{node}}\",\n            \"detail\": \"Group <$ungrouped> successfully applied to node <{{node}}>.\"\n        },\n        {\n            \"node\": \"macpro-2\",\n            \"detail\": \"Group <$ungrouped> successfully applied to node <macpro-2>.\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Tag node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "orka-licensekey",
								"value": "orka-license-key",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/node/tag/{{nodeTag}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"tag",
								"{{nodeTag}}"
							]
						},
						"description": "Mark a node with a custom tag. This allows when deploying a VM to target nodes having this custom tag.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey:` and `Authorization: Bearer` headers."
					},
					"response": [
						{
							"name": "Tag node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "orka-license-key",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/tag/{{nodeTag}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"tag",
										"{{nodeTag}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully tagged node '{{node}}' with a tag '{{nodeTag}}'\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Untag node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "orka-licensekey",
								"value": "{{licenseKey}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/node/tag/{{nodeTag}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"node",
								"tag",
								"{{nodeTag}}"
							]
						},
						"description": "Remove a custom tag from a certain node.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey:` and `Authorization: Bearer` headers."
					},
					"response": [
						{
							"name": "Untag node",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "orka-license-key",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_node_name\": \"{{node}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/node/tag/{{nodeTag}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"node",
										"tag",
										"{{nodeTag}}"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully untagged node '{{node}}'\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to the management of Orka nodes.\n\nA **node** is a physical or logical host that provides computational resources for your VMs. When deploying a VM configuration, you need to select a node with sufficient free computational resources to meet the configuration requirements, or allow Orka to use its default system to select a free node.\n\nWhen you let Orka allocate a node for a single VM, the service uses a random algorithm to select a node and then checks for available resources. When Orka needs to allocate resources for multiple VMs, the default Kubernetes scheduler is used.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "List images",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/image/list",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"list"
							]
						},
						"description": "Retrieve a list of the base images and empty disks in your Orka environment. \n\n> **NOTE:** Orka lists generated empty storage disks with a fixed size of ~192k. When attached to a VM and formatted, the disk will appear with its correct size in the OS.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List images",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "237"
								},
								{
									"key": "ETag",
									"value": "W/\"ed-liVopy+hhGQ7uwgl+ab8EmONtG4\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"image_attributes\": [\n        {\n            \"image\": \"Monterey.orkasi\",\n            \"image_size\": \"90G\",\n            \"modified\": \"2022-02-10T10:54:28.842Z\",\n            \"date_added\": \"2022-01-28T15:44:32.156Z\",\n            \"owner\": \"all\"\n        },\n        {\n            \"image\": \"Mojave-Clean.img\",\n            \"image_size\": \"17G\",\n            \"modified\": \"2019-09-16T14:49:48.088Z\",\n            \"date_added\": \"2019-11-11T23:03:58.560Z\",\n            \"owner\": \"all\"\n        },\n        {\n            \"image\": \"Mojave-Jenkins.img\",\n            \"image_size\": \"17G\",\n            \"modified\": \"2019-08-11T06:09:56.821Z\",\n            \"date_added\": \"2019-11-11T23:03:58.564Z\",\n            \"owner\": \"all\"\n        },\n        {\n            \"image\": \"Mojave.img\",\n            \"image_size\": \"17G\",\n            \"modified\": \"2019-08-14T14:25:44.282Z\",\n            \"date_added\": \"2019-11-11T23:03:58.567Z\",\n            \"owner\": \"all\"\n        },\n        {\n            \"image\": \"empty.img\",\n            \"image_size\": \"193k\",\n            \"modified\": \"2019-11-22T10:37:49.000Z\",\n            \"date_added\": \"2019-11-22T10:37:50.154Z\",\n            \"owner\": \"all\"\n        }\n    ],\n    \"images\": [\n        \"Monterey.orkasi\",\n        \"Mojave-Clean.img\",\n        \"Mojave-Jenkins.img\",\n        \"Mojave.img\",\n        \"empty.img\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Rename image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/rename",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"rename"
							]
						},
						"description": "Rename the specified base image.\n\n> **CAUTION:** After you rename a base image, you can no longer deploy any VM configurations that are based on the image of the old name.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Rename image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/rename",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"rename"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully rename\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Copy image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/copy",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"copy"
							]
						},
						"description": "Copy an existing base image.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Copy image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/copy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"copy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "List remote images",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/image/list-remote",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"list-remote"
							]
						},
						"description": "List the base images available in the Orka remote repo.\n\nTo use one of the images from the remote repo, you can `pull` it into the local Orka storage.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List remote images",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/list-remote",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"list-remote"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "237"
								},
								{
									"key": "ETag",
									"value": "W/\"ed-liVopy+hhGQ7uwgl+ab8EmONtG4\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:16 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"images\": [\n        \"Monterey.orkasi\",\n        \"Mojave-Clean.img\",\n        \"Test.img\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Pull image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/pull",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"pull"
							]
						},
						"description": "Pull a base image from the remote repo. This is a long-running operation and might take a while.\n\nThe operation copies the image to the local storage of your Orka environment. The base image will be available for use by all users of the environment.\n\nTo see the available images in the remote repo, use `list remote images`.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Pull image and retain name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image\": \"{{baseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/pull",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"pull"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied image.\",\n    \"help\": {},\n    \"errors\": []\n}"
						},
						{
							"name": "Pull image and rename",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image\": \"{{baseImage}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/pull",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"pull"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied image.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Delete image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"image\": \"{{baseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/delete",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"delete"
							]
						},
						"description": "Delete the specified image from the local Orka storage.\n\n> **CAUTION:** Make sure that the image is not in use.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Delete image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"image\": \"{{baseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted: {{baseImage}}\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Commit changes to the base image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/commit",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"commit"
							]
						},
						"description": "Apply the current state of a VM's image to the original base image in the Orka storage. Use this operation to modify an existing base image. All VM configs that reference this base image will be affected.\n\nYou must specify the VM by ID. The VM must be deployed. The VM must be non-scaled. The base image to which you want to commit changes must be in use by only one VM. The base image to which you want to commit changes must not be in use by a VM configuration with saved VM state.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Commit changes to base image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/commit",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"commit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"committed\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Save new base image from VM",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/save",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"save"
							]
						},
						"description": "Save the current state of a VM's image to a new base image in the Orka storage. Use this operation to create a new base image.\n\nYou must specify the VM by ID. The VM must be deployed. The VM must be non-scaled. The base image name that you specify must not be in use.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Save new base image from VM",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"new_name\": \"{{newBaseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/save",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"save"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"saved\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Resize image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"vm_username\": \"admin\",\n\t\"vm_password\": \"admin\",\n\t\"new_image_size\": \"100G\",\n\t\"new_image_name\": \"{{newBaseImage}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/resize",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"resize"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel images only. Intel images have `.img` extension.\n\nResize the current disk of a deployed VM and save it as a new base image. This does not affect the original base image of the VM.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Resize image and perform the partition resize manually",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"new_image_size\": \"100G\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/resize",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"resize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully resized VM disk image to 100G. You need to perform the partition resize manually (see instructions). After the partition is resized, you can commit or save the image.\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Shutting down vm ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos destroyed\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Resizing image ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Image resized.\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos started\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"No ssh credentials provided ... done\\n\"\n        }\n    ]\n}"
						},
						{
							"name": "Resize image and save a new base image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"vm_username\": \"admin\",\n\t\"vm_password\": \"admin\",\n\t\"new_image_size\": \"100G\",\n\t\"new_image_name\": \"{{newBaseImage}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/resize",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"resize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully resized image to 100G. New image saved as {{newBaseImage}}.\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Shutting down vm ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos destroyed\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Resizing image ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Image resized.\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos started\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"9 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"8 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"7 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"ok\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ mktemp\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ DISK_LIST=/var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil list\\n+ force_ascii\\n+ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ tee /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"/dev/disk0 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *268.4 MB   disk0\\n   1:                        EFI EFI                     101.4 MB   disk0s1\\n   2:           Linux Filesystem                         163.9 MB   disk0s2\\n\\n/dev/disk1 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *107.4 GB   disk1\\n   1:                        EFI EFI                     209.7 MB   disk1s1\\n   2:                 Apple_APFS Container disk2         96.4 GB    disk1s2\\n\\n/dev/disk2 (synthesized):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      APFS Container Scheme -                      +96.4 GB    disk2\\n                                 Physical Store disk1s2\\n   1:                APFS Volume Macintosh HD - Data     22.9 GB    disk2s1\\n   2:                APFS Volume Preboot                 83.3 MB    disk2s2\\n   3:                APFS Volume Recovery                523.5 MB   disk2s3\\n   4:                APFS Volume VM                      1.1 GB     disk2s4\\n   5:                APFS Volume Macintosh HD            10.8 GB    disk2s5\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ mktemp\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ DISK_INFO=/var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.WUIDd2Kd\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil info /\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ force_ascii\\n+ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n+ tee /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.WUIDd2Kd\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"   Device Identifier:         disk2s5\\n   Device Node:               /dev/disk2s5\\n   Whole:                     No\\n   Part of Whole:             disk2\\n\\n   Volume Name:               Macintosh HD\\n   Mounted:                   Yes\\n   Mount Point:               /\\n\\n   Partition Type:            41504653-0000-11AA-AA11-00306543ECAC\\n   File System Personality:   APFS\\n   Type (Bundle):             apfs\\n   Name (User Visible):       APFS\\n   Owners:                    Enabled\\n\\n   OS Can Be Installed:       No\\n   Booter Disk:               disk2s2\\n   Recovery Disk:             disk2s3\\n   Media Type:                Generic\\n   Protocol:                  SATA\\n   SMART Status:              Verified\\n   Volume UUID:               DD1F67FC-CD9F-42B5-81F8-46FC9433958C\\n   Disk / Partition UUID:     DD1F67FC-CD9F-42B5-81F8-46FC9433958C\\n\\n   Disk Size:                 96.4 GB (96427008000 Bytes) (exactly 188334000 512-Byte-Units)\\n   Device Block Size:         4096 Bytes\\n\\n   Container Total Space:     96.4 GB (96427008000 Bytes) (exactly 188334000 512-Byte-Units)\\n   Container Free Space:      60.9 GB (60902879232 Bytes) (exactly 118950936 512-Byte-Units)\\n   Allocation Block Size:     4096 Bytes\\n\\n   Read-Only Media:           No\\n   Read-Only Volume:          Yes\\n\\n   Device Location:           Internal\\n   Removable Media:           Fixed\\n\\n   Solid State:               No\\n   Hardware AES Support:      No\\n\\n   This disk is an APFS Volume.  APFS Information:\\n   APFS Container:            disk2\\n   APFS Physical Store:       disk1s2\\n   Fusion Drive:              No\\n   APFS Volume Group:         60340407-DC99-4EAC-B7E6-FD19406361FE\\n   FileVault:                 No\\n   Locked:                    No\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ trap 'echo done && rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.WUIDd2Kd && rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX' EXIT\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i 'type (bundle)' /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.WUIDd2Kd\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $3}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ FS_TYPE=apfs\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ -z apfs ]]\\n+ set -u\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ apfs == \\\\a\\\\p\\\\f\\\\s ]]\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $7}'\\n++ sed 's/^\\\\(disk[0-9]*\\\\).*/\\\\1/'\\n++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ APFS_STORE=disk1\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $4}'\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"*** repairing partition map ***\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ APFS_CONTAINER=disk2\\n+ echo '*** repairing partition map ***'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ echo -n y\\n+ diskutil repairDisk disk1\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Repairing the partition map might erase disk1s1, proceed? (y/N) Started partition map repair on disk1\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking prerequisites\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the partition list\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Adjusting partition map to fit whole disk as required\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Did grow entire partition map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking for an EFI system partition\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's size\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's file system\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's folder content\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking all HFS data partition loader spaces\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking booter partitions\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Reviewing boot support loaders\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking Core Storage Physical Volume partitions\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The partition map appears to be OK\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Finished partition map repair on disk1\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ echo '*** resizing apfs container ***'\\n+ diskutil apfs resizeContainer /dev/disk2 0\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"*** resizing apfs container ***\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Started APFS operation\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Aligning grow delta to 10,737,418,240 bytes and targeting a new physical store size of 107,164,426,240 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Determined the maximum size for the targeted physical store of this APFS Container to be 107,163,398,144 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Resizing APFS Container designated by APFS Container Reference disk2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The specific APFS Physical Store being resized is disk1s2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Verifying storage system\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Using live mode\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Performing fsck_apfs -n -x -l -S /dev/disk1s2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the container superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI jumpstart record\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the space manager\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the space manager free queue trees\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Macintosh HD - Data was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Preboot was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Recovery was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume VM was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Macintosh HD was formatted by diskmanagementd (1412.81.1) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Verifying allocated space\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume /dev/disk1s2 appears to be OK\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Storage system check exit code is 0\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Growing APFS Physical Store disk1s2 from 96,427,008,000 to 107,164,426,240 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Modifying partition map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Growing APFS data structures\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Finished APFS operation\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil list\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"/dev/disk0 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *268.4 MB   disk0\\n   1:                        EFI EFI                     101.4 MB   disk0s1\\n   2:           Linux Filesystem                         163.9 MB   disk0s2\\n\\n/dev/disk1 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *107.4 GB   disk1\\n   1:                        EFI EFI                     209.7 MB   disk1s1\\n   2:                 Apple_APFS Container disk2         107.2 GB   disk1s2\\n\\n/dev/disk2 (synthesized):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      APFS Container Scheme -                      +107.2 GB   disk2\\n                                 Physical Store disk1s2\\n   1:                APFS Volume Macintosh HD - Data     22.9 GB    disk2s1\\n   2:                APFS Volume Preboot                 83.3 MB    disk2s2\\n   3:                APFS Volume Recovery                523.5 MB   disk2s3\\n   4:                APFS Volume VM                      1.1 GB     disk2s4\\n   5:                APFS Volume Macintosh HD            10.8 GB    disk2s5\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ set +e\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diff /dev/fd/63 /dev/fd/62\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $5 $6}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ diskutil list\\n++ force_ascii\\n++ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $5 $6}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"1c1\\n< 96.4GB\\n---\\n> 107.2GB\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"done\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ 1 -eq 0 ]]\\n+ echo done\\n+ rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.WUIDd2Kd\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.QU2uUaiX\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Saving new base image {{newBaseImage}}\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos destroyed\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Image committed.\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos started\\n\\n\"\n        }\n    ]\n}"
						},
						{
							"name": "Resize image and save the new base manually",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"orka_vm_name\": \"{{vmID}}\",\n\t\"vm_username\": \"admin\",\n\t\"vm_password\": \"admin\",\n\t\"new_image_size\": \"100G\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/resize",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"resize"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully resized image to 100G. The image was not saved and will not persist across future deployments or revert operations. You can save or commit the image manually.\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Shutting down vm ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos destroyed\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Resizing image ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Image resized.\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Domain macos started\\n\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"9 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"8 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"ssh: connect to host 192.168.122.2 port 22: No route to host\\r\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"7 retries remaining\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Waiting for ssh access ...\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"ok\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ mktemp\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ DISK_LIST=/var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil list\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ force_ascii\\n+ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ tee /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"/dev/disk0 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *268.4 MB   disk0\\n   1:                        EFI EFI                     101.4 MB   disk0s1\\n   2:           Linux Filesystem                         163.9 MB   disk0s2\\n\\n/dev/disk1 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *139.6 GB   disk1\\n   1:                        EFI EFI                     209.7 MB   disk1s1\\n   2:                 Apple_APFS Container disk2         107.2 GB   disk1s2\\n\\n/dev/disk2 (synthesized):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      APFS Container Scheme -                      +107.2 GB   disk2\\n                                 Physical Store disk1s2\\n   1:                APFS Volume Macintosh HD - Data     22.9 GB    disk2s1\\n   2:                APFS Volume Preboot                 83.3 MB    disk2s2\\n   3:                APFS Volume Recovery                523.5 MB   disk2s3\\n   4:                APFS Volume VM                      1.1 GB     disk2s4\\n   5:                APFS Volume Macintosh HD            10.8 GB    disk2s5\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ mktemp\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ DISK_INFO=/var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.W6HcXnDh\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil info /\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ force_ascii\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ tee /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.W6HcXnDh\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"   Device Identifier:         disk2s5\\n   Device Node:               /dev/disk2s5\\n   Whole:                     No\\n   Part of Whole:             disk2\\n\\n   Volume Name:               Macintosh HD\\n   Mounted:                   Yes\\n   Mount Point:               /\\n\\n   Partition Type:            41504653-0000-11AA-AA11-00306543ECAC\\n   File System Personality:   APFS\\n   Type (Bundle):             apfs\\n   Name (User Visible):       APFS\\n   Owners:                    Enabled\\n\\n   OS Can Be Installed:       No\\n   Booter Disk:               disk2s2\\n   Recovery Disk:             disk2s3\\n   Media Type:                Generic\\n   Protocol:                  SATA\\n   SMART Status:              Verified\\n   Volume UUID:               DD1F67FC-CD9F-42B5-81F8-46FC9433958C\\n   Disk / Partition UUID:     DD1F67FC-CD9F-42B5-81F8-46FC9433958C\\n\\n   Disk Size:                 107.2 GB (107164426240 Bytes) (exactly 209305520 512-Byte-Units)\\n   Device Block Size:         4096 Bytes\\n\\n   Container Total Space:     107.2 GB (107164426240 Bytes) (exactly 209305520 512-Byte-Units)\\n   Container Free Space:      71.6 GB (71626600448 Bytes) (exactly 139895704 512-Byte-Units)\\n   Allocation Block Size:     4096 Bytes\\n\\n   Read-Only Media:           No\\n   Read-Only Volume:          Yes\\n\\n   Device Location:           Internal\\n   Removable Media:           Fixed\\n\\n   Solid State:               No\\n   Hardware AES Support:      No\\n\\n   This disk is an APFS Volume.  APFS Information:\\n   APFS Container:            disk2\\n   APFS Physical Store:       disk1s2\\n   Fusion Drive:              No\\n   APFS Volume Group:         60340407-DC99-4EAC-B7E6-FD19406361FE\\n   FileVault:                 No\\n   Locked:                    No\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ trap 'echo done && rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.W6HcXnDh && rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu' EXIT\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i 'type (bundle)' /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.W6HcXnDh\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $3}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ FS_TYPE=apfs\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ -z apfs ]]\\n+ set -u\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ apfs == \\\\a\\\\p\\\\f\\\\s ]]\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n++ awk '{print $7}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ sed 's/^\\\\(disk[0-9]*\\\\).*/\\\\1/'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ APFS_STORE=disk1\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ awk '{print $4}'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ APFS_CONTAINER=disk2\\n+ echo '*** repairing partition map ***'\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"*** repairing partition map ***\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ echo -n y\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil repairDisk disk1\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Repairing the partition map might erase disk1s1, proceed? (y/N) Started partition map repair on disk1\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking prerequisites\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the partition list\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Adjusting partition map to fit whole disk as required\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Did grow entire partition map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking for an EFI system partition\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's size\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's file system\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI system partition's folder content\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking all HFS data partition loader spaces\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking booter partitions\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Reviewing boot support loaders\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking Core Storage Physical Volume partitions\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The partition map appears to be OK\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Finished partition map repair on disk1\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"*** resizing apfs container ***\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ echo '*** resizing apfs container ***'\\n+ diskutil apfs resizeContainer /dev/disk2 0\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Started APFS operation\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Aligning grow delta to 32,212,254,720 bytes and targeting a new physical store size of 139,376,680,960 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Determined the maximum size for the targeted physical store of this APFS Container to be 139,375,652,864 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Resizing APFS Container designated by APFS Container Reference disk2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The specific APFS Physical Store being resized is disk1s2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Verifying storage system\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Using live mode\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Performing fsck_apfs -n -x -l -S /dev/disk1s2\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the container superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the EFI jumpstart record\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the space manager\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the space manager free queue trees\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Macintosh HD - Data was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Preboot was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Recovery was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume VM was formatted by diskmanagementd (1412.11.7) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking volume\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the APFS volume superblock\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume Macintosh HD was formatted by diskmanagementd (1412.81.1) and last modified by apfs_kext (1412.81.1)\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the object map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the snapshot metadata\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the extent ref tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Checking the fsroot tree\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Verifying allocated space\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"The volume /dev/disk1s2 appears to be OK\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Storage system check exit code is 0\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Growing APFS Physical Store disk1s2 from 107,164,426,240 to 139,376,680,960 bytes\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Modifying partition map\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Growing APFS data structures\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"Finished APFS operation\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diskutil list\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"/dev/disk0 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *268.4 MB   disk0\\n   1:                        EFI EFI                     101.4 MB   disk0s1\\n   2:           Linux Filesystem                         163.9 MB   disk0s2\\n\\n/dev/disk1 (internal, physical):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      GUID_partition_scheme                        *139.6 GB   disk1\\n   1:                        EFI EFI                     209.7 MB   disk1s1\\n   2:                 Apple_APFS Container disk2         139.4 GB   disk1s2\\n\\n/dev/disk2 (synthesized):\\n   #:                       TYPE NAME                    SIZE       IDENTIFIER\\n   0:      APFS Container Scheme -                      +139.4 GB   disk2\\n                                 Physical Store disk1s2\\n   1:                APFS Volume Macintosh HD - Data     22.9 GB    disk2s1\\n   2:                APFS Volume Preboot                 83.3 MB    disk2s2\\n   3:                APFS Volume Recovery                523.5 MB   disk2s3\\n   4:                APFS Volume VM                      1.1 GB     disk2s4\\n   5:                APFS Volume Macintosh HD            10.8 GB    disk2s5\\n\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ set +e\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ diff /dev/fd/63 /dev/fd/62\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ diskutil list\\n++ awk '{print $5 $6}'\\n++ force_ascii\\n++ tr -d '\\\\200-\\\\277\\\\300-\\\\377'\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"++ grep -i apple_apfs\\n++ awk '{print $5 $6}'\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"1c1\\n< 107.2GB\\n---\\n> 139.4GB\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ [[ 1 -eq 0 ]]\\n+ echo done\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"done\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.W6HcXnDh\\n\"\n        },\n        {\n            \"channel\": \"stderr\",\n            \"message\": \"+ rm -f /var/folders/cr/2yb1txy91k5b072r94j5cl9w0000gn/T/tmp.l8nkrqLu\\n\"\n        },\n        {\n            \"channel\": \"stdout\",\n            \"message\": \"No image saved\\n\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Generate empty storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"file_name\": \"{{storageImage}}\",\n\t\"file_size\": \"10G\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/image/generate",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"generate"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel images only. Intel images have `.img` extension.\n\nGenerate an empty base image. You can use it to create VM configurations that will use an ISO or you can attach it to a deployed VM to extend its storage. You can specify size (in K, M, G, or T) and name for the new storage.\n\n> **NOTE:** The size limit for the storage depends on your plan and any base images and ISOs in your Orka storage. For more information, [contact us](https://portal.macstadium.com).  \n> **NOTE:** Orka lists generated empty storage disks with a fixed size of \\~192k. When attached to a VM and formatted, the disk will appear with its correct size in the VM.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Generate empty storage",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"file_name\": \"{{storageImage}}\",\n\t\"file_size\": \"10G\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/image/generate",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"generate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully generated image\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Upload an image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{domain}}/resources/image/upload",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"upload"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel images only. Intel images have `.img` extension.\n\nUpload an image to the Orka environment.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the Authorization: Bearer header."
					},
					"response": [
						{
							"name": "Upload an image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{domain}}/resources/image/upload",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"upload"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-0SJnknumtk93GXXl5o7b/21Ws1c\""
								},
								{
									"key": "Date",
									"value": "Mon, 02 Aug 2021 18:21:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully uploaded {{image}}\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Download an image",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/image/download/{{baseImage}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"download",
								"{{baseImage}}"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel images only. Intel images have `.img` extension.\n\nDownload an image from Orka cluster storage to your local filesystem. A `404` status code will be returned if the image is not found.\n\n> NOTE: use the `--remote-name` or `--output` flags with curl to download an image.\n\nThe response will include the `Content-Disposition: attachment; filename=`,  \n`Content-Type: application/octet-stream` and  \n`Content-Length:` headers. See the response headers in the example.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Download an image",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/download/{{baseImage}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"download",
										"{{baseImage}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Disposition",
									"value": "attachment; filename={{baseImage}}"
								},
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								},
								{
									"key": "Content-Length",
									"value": "29815144448"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Image not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/download/{{baseImage}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"download",
										"{{baseImage}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [\n        {\n            \"message\": \"image file not found: {{baseImage}}\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Calculate image checksum",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/image/checksum/{{baseImage}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"image",
								"checksum",
								"{{baseImage}}"
							]
						},
						"description": "> **NOTE**: This request is supported for Intel images only. Intel images have `.img` extension.\n\nRequest the MD5 file checksum for a base image in Orka cluster storage. The checksum can be used to verify file integrity for a downloaded or uploaded image. A `202` status code will be returned while the calculation is in progress and has not completed. A `404` status code will be returned if the image is not found.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer` header."
					},
					"response": [
						{
							"name": "Calculate image checksum",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/checksum/{{baseImage}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"checksum",
										"{{baseImage}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"image\": \"{{baseImage}}\",\n    \"checksum\": \"1d1b1e8fa44aa6c6d9b26502305cc28e\"\n}"
						},
						{
							"name": "Calculation in progress",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/checksum/{{baseImage}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"checksum",
										"{{baseImage}}"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"calculating checksum for image '{{baseImage}}'\",\n    \"help\": {},\n    \"errors\": []\n}"
						},
						{
							"name": "Image not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/image/checksum/{{baseImage}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"image",
										"checksum",
										"{{baseImage}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [\n        {\n            \"message\": \"image '{{baseImage}}' not found\"\n        }\n    ]\n}"
						}
					]
				}
			],
			"description": "All requests in this group, except `generate empty storage`, are related to the management of base images. `generate empty storage` handles the creation of additional storage for your VMs.\n\nA **base image** is an existing bootable disk image file stored in Orka and used exclusively for the creation of VM configurations. The actual storage for newly deployed VMs is based on the base image specified by the user.\n\nBase images remain unchanged over time and can be used again and again for the creation of VMs and VM configurations. To change a base image, you can `commit` the changes from a running VM to it. To optimize a base image for the deployment and booting of a specific VM configuration, you can perform a `live commit`. You can create a new base image by saving the disk image of a deployed VM.\n\nBase images are stored as `.img` files in the Orka storage. Base images live in the Image Manager namespace and are shared across the same Orka environment. All users can access them and use them to create VM configurations.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			}
		},
		{
			"name": "ISOs",
			"item": [
				{
					"name": "List ISOs in local storage",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/iso/list",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"list"
							]
						},
						"description": "Retrieve a list of the ISOs available in the local Orka storage.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List ISOs in local storage",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/iso/list",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"iso_attributes\": [\n        {\n            \"iso\": \"Catalina.iso\",\n            \"iso_size\": \"2G\",\n            \"modified\": \"2019-10-03T02:58:01.206Z\"\n        },\n        {\n            \"iso\": \"Mojave-demo.iso\",\n            \"iso_size\": \"2G\",\n            \"modified\": \"2019-11-07T18:04:27.351Z\"\n        },\n        {\n            \"iso\": \"Mojave.iso\",\n            \"iso_size\": \"2G\",\n            \"modified\": \"2019-11-07T17:19:37.890Z\"\n        }\n    ],\n    \"isos\": [\n        \"Catalina.iso\",\n        \"Mojave-demo.iso\",\n        \"Mojave.iso\"\n    ]\n}"
						}
					]
				},
				{
					"name": "List remote ISOs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/resources/iso/list-remote",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"list-remote"
							]
						},
						"description": "List the ISOs available in the Orka remote repo.\n\nTo use one of the ISOs from the remote repo, you can `pull` it into the local Orka storage.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "List remote ISOs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/iso/list-remote",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"list-remote"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"isos\": [\n        \"Catalina.iso\",\n        \"{{iso}}\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Pull ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/iso/pull",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"pull"
							]
						},
						"description": "Pull an ISO from the remote repo. You can retain the ISO name or change it during the operation. This is a long-running operation and might take a while.\n\nThe operation copies the ISO to the local storage of your Orka environment. The ISO will be available for use by all users of the environment.\n\nTo see the available ISOs in the remote repo, use `list remote ISOs`.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Pull ISO and retain name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"iso\": \"{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/iso/pull",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"pull"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied iso.\",\n    \"help\": {},\n    \"errors\": []\n}"
						},
						{
							"name": "Pull ISO and rename",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/iso/pull",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"pull"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied iso.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Rename ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/iso/rename",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"rename"
							]
						},
						"description": "Rename the specified ISO. The ISO must be present in the local Orka storage.\n\n> **CAUTION:** Make sure that the ISO is not in use. Any VMs that have the ISO of the old name attached will no longer be able to boot from it.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Rename ISO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/iso/rename",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"rename"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully renamed ISO\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Copy ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/iso/copy",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"copy"
							]
						},
						"description": "Copy the specified ISO. The ISO must be present in the local Orka storage.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Copy ISO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"iso\": \"{{iso}}\",\n\t\"new_name\": \"new{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/iso/copy",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"copy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully copied.\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Delete ISO",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"iso\": \"{{iso}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/iso/delete",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"delete"
							]
						},
						"description": "Delete the specified ISO from the local Orka storage.\n\n> **CAUTION:** Make sure that the ISO is not in use. Any VMs that have the ISO attached will no longer be able to boot from it.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Delete ISO",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"iso\": \"{{iso}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/iso/delete",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "ETag",
									"value": "W/\"37-PMOmaj6Clq0feRDUzzlrIho5jjA\""
								},
								{
									"key": "Date",
									"value": "Thu, 25 Jul 2019 17:48:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully deleted ISO\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Upload an ISO",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "iso",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{domain}}/resources/iso/upload",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"iso",
								"upload"
							]
						},
						"description": "Upload an iso to the Orka environment.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the Authorization: Bearer <token> header."
					},
					"response": [
						{
							"name": "Upload an ISO",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "iso",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{domain}}/resources/iso/upload",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"iso",
										"upload"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "ETag",
									"value": "W/\"43-S7zz+I1wLQt3M0um5laBsukk+OY\""
								},
								{
									"key": "Date",
									"value": "Mon, 02 Aug 2021 18:46:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Successfully uploaded {{iso}}\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to the management of ISO files used for installing macOS.\n\n> **NOTE**: All ISO requests are supported for Intel nodes only.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Kube-Accounts",
			"item": [
				{
					"name": "List kube-accounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/kube-account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"kube-account"
							]
						},
						"description": "Retrieve a list of kube-accounts associated with an Orka user.\n\n_Usage:_\n* **No body**: Retrieve a list of the kube-accounts for the Orka user associated with the token passed in the header.\n* **`email` in the body**: Retrieve a list of the kube-accounts for the Orka user with the specified email address.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "List kube-accounts (with email)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"serviceAccounts\": [\n    \t\"{{kubeAccount}}\"\n    ]\n}"
						},
						{
							"name": "List kube-accounts (no email)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"serviceAccounts\": [\n    \t\"{{kubeAccount}}\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Create kube-account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{kubeAccount}}\",\n\t\"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/kube-account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"kube-account"
							]
						},
						"description": "Create a kube-account and return its `kubeconfig`.\n\n_Usage:_\n* **`name` only**: Create a kube-account for the Orka user associated with the token passed in the header.\n* **`name` and `email`**: Create a kube-account for the Orka user with the specified email address.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Create Kube-Account (with email)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{kubeAccount}}\",\n\t\"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2833"
								},
								{
									"key": "ETag",
									"value": "W/\"b11-A5pzrLrTatVc2KerWWZY4hxM7NM\""
								},
								{
									"key": "Date",
									"value": "Thu, 27 Jun 2019 14:43:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						},
						{
							"name": "Create kube-account (no email)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{kubeAccount}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2833"
								},
								{
									"key": "ETag",
									"value": "W/\"b11-A5pzrLrTatVc2KerWWZY4hxM7NM\""
								},
								{
									"key": "Date",
									"value": "Thu, 27 Jun 2019 14:43:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						}
					]
				},
				{
					"name": "Regenerate kube-account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{kubeAccount}}\",\n\t\"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/kube-account/regenerate",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"kube-account",
								"regenerate"
							]
						},
						"description": "Regenerate the specified kube-account and retrieve its new `kubeconfig`.\n\n_Usage:_\n* **`name` only**: Regenerate the specified kube-account for the Orka user associated with the token passed in the header.\n* **`name` and `email`**: Regenerate the specified kube-account for the Orka user with the specified email address.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Regenerate kube-account (no email)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{kubeAccount}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/kube-account/regenerate",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account",
										"regenerate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						},
						{
							"name": "Regenerate kube-account (with email)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{kubeAccount}}\",\n\t\"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/kube-account/regenerate",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account",
										"regenerate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						}
					]
				},
				{
					"name": "Delete kube-account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/kube-account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"kube-account"
							]
						},
						"description": "Delete the specified kube-account.\n\n_Usage:_\n* **No body** Delete the kube-account for the Orka user with the token passed in the header.\n* **`email` in the body:** Delete the kube-account for the Orka user with the specified email.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Delete kube-account (with email)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": []\n}"
						},
						{
							"name": "Delete kube-account (no email)",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/kube-account",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				},
				{
					"name": "Download kubeconfig",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"{{kubeAccount}}\",\n\t\"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/resources/kube-account/download",
							"host": [
								"{{domain}}"
							],
							"path": [
								"resources",
								"kube-account",
								"download"
							]
						},
						"description": "Retrieve the `kubeconfig` for the specified kube-account.\n\n_Usage:_\n* **`name` only**: Retrieve the `kubeconfig` for the specified kube-account. The kube-account must be associated with the Orka user for the token passed in the header.\n* **`name` and `email`**: Retrieve the `kubeconfig` for the specified kube-account of the Orka user with the specified email address.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Download kubeconfig (no email)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/kube-account/download",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "27"
								},
								{
									"key": "ETag",
									"value": "W/\"1b-Hyb9vbo41/ZvS66rCFikJA1PwDE\""
								},
								{
									"key": "Date",
									"value": "Thu, 27 Jun 2019 14:49:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						},
						{
							"name": "Download kubeconnfig (with email)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token}}"
									},
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/resources/kube-account/download",
									"host": [
										"{{domain}}"
									],
									"path": [
										"resources",
										"kube-account",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "27"
								},
								{
									"key": "ETag",
									"value": "W/\"1b-Hyb9vbo41/ZvS66rCFikJA1PwDE\""
								},
								{
									"key": "Date",
									"value": "Thu, 27 Jun 2019 14:49:24 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"kubeconfig\": \"\\napiVersion: v1\\nclusters:\\n- cluster:\\n    insecure-skip-tls-verify: false\\n    certificate-authority-data: REDACTED_FOR_EXAMPLE\\n    server: REDACTED_FOR_EXAMPLE\\n  name: kubernetes\\ncontexts:\\n- context:\\n    cluster: kubernetes\\n    namespace: sandbox\\n    user: {{kubeAccount}}\\n  name: {{kubeAccount}}@kubernetes\\ncurrent-context: {{kubeAccount}}@kubernetes\\nkind: Config\\npreferences: {}\\nusers:\\n- name: {{kubeAccount}}\\n  user:\\n    token: {{token}}\\n\"\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to the management of kube-accounts.\n\nA **kube-account** is a Kubernetes service account used for the management of a node with `kubectl`. Each kube-account has a `kubeconfig`.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Logs 1.0 (deprecated)",
			"item": [
				{
					"name": "List logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"url": {
							"raw": "{{domain}}/logs/query?limit={{logsLimit}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"logs",
								"query"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{logsLimit}}",
									"description": "Limit the total number of logs returned"
								}
							]
						},
						"description": "Retrieve a log of all CLI commands and API requests executed against your Orka environment. \n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header.\n\nYou can optionally limit the amount of results returned with the `limit` query parameter."
					},
					"response": [
						{
							"name": "List all logs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"createdAt\": \"2020-05-07T13:17:52.899Z\",\n            \"id\": \"f3e8d526-9285-4682-b02f-5c72add8b460\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {\n                    \"orka_vm_name\": \"{{vm}}\"\n                },\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate, br\",\n                    \"cache-control\": \"no-cache\",\n                    \"connection\": \"keep-alive\",\n                    \"content-length\": \"31\",\n                    \"content-type\": \"application/json\",\n                    \"host\": {{host}},\n                    \"postman-token\": \"56f32c79-d7c7-44fd-b1f5-52faf5130f3b\",\n                    \"user-agent\": \"PostmanRuntime/7.24.1\"\n                },\n                \"method\": \"DELETE\",\n                \"url\": \"/resources/vm/delete\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n                        \"list_orka_nodes\": \"To list orka nodes send a rest a request to {{domain}}/resources/node/list\",\n                        \"required_request_data_for_deploy\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        }\n                    },\n                    \"message\": \"Successfully deleted VM\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"372\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"174-aYFIE14PAFIci4OLLNE8hJpKpEc\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"73b3dcf3-987a-4c67-a725-27dc8ed21ba1\"\n            }\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:17:22.437Z\",\n            \"id\": \"f3b17444-88b4-43fa-bf2a-a457552038f8\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {\n                    \"orka_vm_name\": \"{{vm}}\"\n                },\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate, br\",\n                    \"cache-control\": \"no-cache\",\n                    \"connection\": \"keep-alive\",\n                    \"content-length\": \"31\",\n                    \"content-type\": \"application/json\",\n                    \"host\": {{host}},\n                    \"postman-token\": \"3bb357e7-966b-4a5e-a2b8-c1702bd0abe2\",\n                    \"user-agent\": \"PostmanRuntime/7.24.1\"\n                },\n                \"method\": \"DELETE\",\n                \"url\": \"/resources/vm/delete\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [\n                        {\n                            \"message\": \"No authorization token was found\"\n                        }\n                    ],\n                    \"help\": {},\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"82\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"52-o9IVOX3UbIP0Us4MZyiRKcPbhek\\\"\"\n                },\n                \"statusCode\": 401\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:16:06.127Z\",\n            \"id\": \"8e3148ec-8367-44a5-b8f0-2809779a2313\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"referer\": \"{{domain}}/view/vms\",\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/resources/vm/list\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"\",\n                    \"virtual_machine_resources\": [\n                        {\n                            \"status\": [\n                                {\n                                    \"RAM\": \"7.5G\",\n                                    \"base_image\": \"Mojave.img\",\n                                    \"configuration_template\": \"default\",\n                                    \"cpu\": 3,\n                                    \"image\": \"{{vm}}\",\n                                    \"node_location\": \"macpro-6\",\n                                    \"node_status\": \"UP\",\n                                    \"owner\": \"{{email}}\",\n                                    \"reserved_ports\": [\n                                        {\n                                            \"guest_port\": 5999,\n                                            \"host_port\": 5999,\n                                            \"protocol\": \"TCP\"\n                                        },\n                                        {\n                                            \"guest_port\": 5900,\n                                            \"host_port\": 5900,\n                                            \"protocol\": \"TCP\"\n                                        },\n                                        {\n                                            \"guest_port\": 8821,\n                                            \"host_port\": 8822,\n                                            \"protocol\": \"TCP\"\n                                        }\n                                    ],\n                                    \"screen_sharing_port\": \"5900\",\n                                    \"ssh_port\": \"8822\",\n                                    \"vcpu\": 3,\n                                    \"virtual_machine_id\": \"{{vmID}}\",\n                                    \"virtual_machine_ip\": \"{{vmIP}}\",\n                                    \"virtual_machine_name\": \"{{vm}}\",\n                                    \"vm_status\": \"running\",\n                                    \"vnc_port\": \"5999\"\n                                }\n                            ],\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Deployed\"\n                        }\n                    ]\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"700\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"2bc-0ICLzct6dCt/3FLXvnfOmHMm11A\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"73b3dcf3-987a-4c67-a725-27dc8ed21ba1\"\n            }\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:59.078Z\",\n            \"id\": \"cffcd427-f87b-4222-9556-6424d874d71d\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-US,en;q=0.5\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"referer\": \"{{domain}}/\",\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:75.0) Gecko/20100101 Firefox/75.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/static/js/2.79c7f8e2.chunk.js\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"accept-ranges\": \"bytes\",\n                    \"cache-control\": \"public, max-age=0\",\n                    \"content-length\": 601821,\n                    \"content-type\": \"application/javascript; charset=UTF-8\",\n                    \"etag\": \"W/\\\"92edd-171e56644e8\\\"\",\n                    \"last-modified\": \"Tue, 05 May 2020 15:13:37 GMT\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:56.282Z\",\n            \"id\": \"2a6d0933-b627-4f50-bd7d-9a7f023ee181\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"image/webp,*/*\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-US,en;q=0.5\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:75.0) Gecko/20100101 Firefox/75.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/favicon-32x32.png\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"accept-ranges\": \"bytes\",\n                    \"cache-control\": \"public, max-age=0\",\n                    \"content-length\": 1252,\n                    \"content-type\": \"image/png\",\n                    \"etag\": \"W/\\\"4e4-171e564d5b8\\\"\",\n                    \"last-modified\": \"Tue, 05 May 2020 15:12:03 GMT\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:56.145Z\",\n            \"id\": \"bcd25b98-fe76-4763-8ac3-daa2aeb490e1\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"image/webp,*/*\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-US,en;q=0.5\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:75.0) Gecko/20100101 Firefox/75.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/apple-touch-icon.png\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"accept-ranges\": \"bytes\",\n                    \"cache-control\": \"public, max-age=0\",\n                    \"content-length\": 3628,\n                    \"content-type\": \"image/png\",\n                    \"etag\": \"W/\\\"e2c-171e564d5b8\\\"\",\n                    \"last-modified\": \"Tue, 05 May 2020 15:12:03 GMT\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:54.271Z\",\n            \"id\": \"47aa6c4a-6b70-45a3-8c9a-4c7f4d448796\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-US,en;q=0.5\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"referer\": \"{{domain}}/\",\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:75.0) Gecko/20100101 Firefox/75.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/static/js/main.1f206282.chunk.js\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"accept-ranges\": \"bytes\",\n                    \"cache-control\": \"public, max-age=0\",\n                    \"content-length\": 56396,\n                    \"content-type\": \"application/javascript; charset=UTF-8\",\n                    \"etag\": \"W/\\\"dc4c-171e56644e8\\\"\",\n                    \"last-modified\": \"Tue, 05 May 2020 15:13:37 GMT\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:53.879Z\",\n            \"id\": \"c72cd0d2-d2ec-49a1-bc92-c82319a3c7d2\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\",\n                    \"accept-encoding\": \"gzip, deflate\",\n                    \"accept-language\": \"en-US,en;q=0.5\",\n                    \"connection\": \"keep-alive\",\n                    \"host\": {{host}},\n                    \"upgrade-insecure-requests\": \"1\",\n                    \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:75.0) Gecko/20100101 Firefox/75.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"accept-ranges\": \"bytes\",\n                    \"cache-control\": \"public, max-age=0\",\n                    \"content-length\": 2961,\n                    \"content-type\": \"text/html; charset=UTF-8\",\n                    \"etag\": \"W/\\\"b91-171e56644e8\\\"\",\n                    \"last-modified\": \"Tue, 05 May 2020 15:13:37 GMT\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:41.848Z\",\n            \"id\": \"422a06a1-76fd-44cb-a2e7-0047b765afb3\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {\n                    \"iso_install\": false,\n                    \"orka_vm_name\": \"{{vm}}\",\n                    \"replicas\": 1,\n                    \"reserved_ports\": [],\n                    \"vnc_console\": true\n                },\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"47\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"POST\",\n                \"url\": \"/resources/vm/deploy\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"data_for_virtual_machine_exec_tasks\": {\n                            \"orka_vm_name\": \"{{vm}}\"\n                        },\n                        \"resume_virtual_machine\": \"To resume a VM send rest request to {{domain}}/resources/vm/exec/resume\",\n                        \"start_virtual_machine\": \"To start a VM send rest request to {{domain}}/resources/vm/exec/start\",\n                        \"stop_virtual_machine\": \"To stop a VM send rest request to {{domain}}/resources/vm/exec/stop\",\n                        \"suspend_virtual_machine\": \"To suspend a VM send rest request to {{domain}}/resources/vm/exec/suspend\",\n                        \"virtual_machine_vnc\": \"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\"\n                    },\n                    \"host_cpu\": \"3\",\n                    \"ip\": \"{{vmIP}}\",\n                    \"message\": \"Successfully deployed VM\",\n                    \"port_warnings\": [],\n                    \"ram\": \"7.5G\",\n                    \"screen_share_port\": \"5900\",\n                    \"ssh_port\": \"8822\",\n                    \"vcpu\": \"3\",\n                    \"vm_id\": \"{{vmID}}\",\n                    \"vnc_port\": \"5999\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"816\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"330-9XjBVaxXdNJoQES1XBazxM2HFdo\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"73b3dcf3-987a-4c67-a725-27dc8ed21ba1\"\n            }\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:36.617Z\",\n            \"id\": \"d3ee0c14-f3b9-4f97-bfb3-b2f6e433dfc6\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {\n                    \"orka_base_image\": \"Mojave.img\",\n                    \"orka_cpu_core\": 3,\n                    \"orka_image\": \"{{vm}}\",\n                    \"orka_vm_config_template_name\": \"default\",\n                    \"orka_vm_name\": \"{{vm}}\",\n                    \"type\": \"user_vm_config\",\n                    \"vcpu_count\": 3,\n                    \"vnc_console\": true\n                },\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"168\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"POST\",\n                \"url\": \"/resources/vm/create\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {\n                        \"deploy_virtual_machine\": \"To deploy a VM, make sure you have a configuration created and use the endpoint {{domain}}/resources/vm/deploy\",\n                        \"required_request_data_for_deploy\": {\n                            \"orka_node_name\": \"<ORKA_NODE_NAME>\",\n                            \"orka_vm_name\": \"{{vm}}\"\n                        }\n                    },\n                    \"message\": \"Successfully Created\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"301\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"12d-1yhfBamTtAiNN1eeQyw6TuLLy4Y\\\"\"\n                },\n                \"statusCode\": 201\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"73b3dcf3-987a-4c67-a725-27dc8ed21ba1\"\n            }\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:36.041Z\",\n            \"id\": \"7441e4fb-e4cf-4aec-815c-62d675798a6c\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/token\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"authenticated\": true,\n                    \"email\": \"{{email}}\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"is_token_revoked\": false,\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"103\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"67-R+h0Ln0XrDGfZhMhdkGvrSXv/+g\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"73b3dcf3-987a-4c67-a725-27dc8ed21ba1\"\n            }\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:35.735Z\",\n            \"id\": \"23038f4a-d7a7-464d-964e-f1f0ff415ee0\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/default-base-image\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"default_base_image\": \"Mojave.img\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"35\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"23-JuOAG0ekVpRWDz4M/Y/7hepUUkI\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:35.451Z\",\n            \"id\": \"0f05d816-6252-4040-a3c9-b96dbd4dc70c\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/validation-requirements\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"password_length\": 6\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"21\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"15-Z9/A1tuz71Q8gubBhDU7WS2L6zg\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:35.126Z\",\n            \"id\": \"10880c4f-a443-4fcb-bc93-1887564de019\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": {{host}},\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.4.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.2.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/health-check\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"api_version\": \"1.2.0\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"23\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"17-nxMLVwlUdhennRo9miWK2OdztDY\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:15.980Z\",\n            \"id\": \"da5982ca-e8b8-4489-aaae-b8fba8a6900a\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate, br\",\n                    \"cache-control\": \"no-cache\",\n                    \"connection\": \"keep-alive\",\n                    \"content-length\": \"0\",\n                    \"content-type\": \"application/json\",\n                    \"host\": {{host}},\n                    \"postman-token\": \"e8d69268-4721-4433-a1ab-c36d0eea6ae0\",\n                    \"user-agent\": \"PostmanRuntime/7.24.1\"\n                },\n                \"method\": \"POST\",\n                \"url\": \"/logs/query\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {},\n                    \"logs\": [\n                        {\n                            \"createdAt\": \"2020-05-07T13:15:01.764Z\",\n                            \"id\": \"9e9ddaf8-046d-4494-b5e8-bfc655dff883\",\n                            \"logVersion\": \"1.0\",\n                            \"request\": {\n                                \"body\": {},\n                                \"headers\": {\n                                    \"accept\": \"*/*\",\n                                    \"accept-encoding\": \"gzip, deflate, br\",\n                                    \"cache-control\": \"no-cache\",\n                                    \"connection\": \"keep-alive\",\n                                    \"content-type\": \"application/json\",\n                                    \"host\": {{host}},\n                                    \"postman-token\": \"4703ffe2-a3c4-4810-aba5-1cab3b8519bf\",\n                                    \"user-agent\": \"PostmanRuntime/7.24.1\"\n                                },\n                                \"method\": \"DELETE\",\n                                \"url\": \"/logs\"\n                            },\n                            \"response\": {\n                                \"body\": {\n                                    \"errors\": [],\n                                    \"help\": {},\n                                    \"message\": \"Deleted User Logs\"\n                                },\n                                \"headers\": {\n                                    \"access-control-allow-origin\": \"*\",\n                                    \"content-length\": \"53\",\n                                    \"content-type\": \"application/json; charset=utf-8\",\n                                    \"etag\": \"W/\\\"35-4Z9JtbPU9++m2altd9yNyaWiE/E\\\"\"\n                                },\n                                \"statusCode\": 200\n                            },\n                            \"user\": {}\n                        }\n                    ],\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"733\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"2dd-zih8LoDkj5Vbc1Z2x11o13yc6Bs\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2020-05-07T13:15:01.764Z\",\n            \"id\": \"9e9ddaf8-046d-4494-b5e8-bfc655dff883\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"accept-encoding\": \"gzip, deflate, br\",\n                    \"cache-control\": \"no-cache\",\n                    \"connection\": \"keep-alive\",\n                    \"content-type\": \"application/json\",\n                    \"host\": {{host}},\n                    \"postman-token\": \"4703ffe2-a3c4-4810-aba5-1cab3b8519bf\",\n                    \"user-agent\": \"PostmanRuntime/7.24.1\"\n                },\n                \"method\": \"DELETE\",\n                \"url\": \"/logs\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"Deleted User Logs\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"53\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"35-4Z9JtbPU9++m2altd9yNyaWiE/E\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        }\n    ]\n}"
						},
						{
							"name": "List 10 most recent logs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query?limit={{logsLimit}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{logsLimit}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"createdAt\": \"2021-05-12T16:04:00.929Z\",\n            \"id\": \"06e22e80-a5fd-4799-a8ac-95915c2e0292\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:03:52.497Z\",\n            \"id\": \"fc67914d-bd5f-4a7a-9147-9bc436d3c80f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"host\": \"{{host}}\",\n                    \"user-agent\": \"curl/7.64.1\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/health-check\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"api_version\": \"1.5.3\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"58\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"3a-31O1WutQkbVu0KijLTIsY3Pr0Ig\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:03:00.917Z\",\n            \"id\": \"842141fd-c059-4c7e-bef9-74840ead7e4b\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:02:00.888Z\",\n            \"id\": \"5abff770-c819-46dc-a975-64e3084d5b5f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:51.876Z\",\n            \"id\": \"a1a0b5f2-7b86-43b8-9e09-956d07d2e0c0\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"2\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/resources/vm/configs\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"configs\": [\n                        {\n                            \"attached_disk\": \"None\",\n                            \"gpu_passthrough\": false,\n                            \"io_boost\": false,\n                            \"iso_image\": \"None\",\n                            \"orka_base_image\": \"{{baseImage}}\",\n                            \"orka_cpu_core\": 6,\n                            \"orka_vm_name\": \"{{vm}}\",\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu_count\": 6,\n                            \"vnc_console\": true\n                        },\n                        {\n                            \"attached_disk\": \"None\",\n                            \"gpu_passthrough\": true,\n                            \"io_boost\": false,\n                            \"iso_image\": \"None\",\n                            \"orka_base_image\": \"{{baseImage}}\",\n                            \"orka_cpu_core\": 6,\n                            \"orka_vm_name\": \"{{vm}}-gpu\",\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu_count\": 6,\n                            \"vnc_console\": false\n                        }\n                    ],\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"570\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"23a-m0uaWt51XUE4fsyUSVSaI5plUqQ\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:51.646Z\",\n            \"id\": \"da4f1697-d182-44d3-ae9e-70d901b22e4c\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/token\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"authenticated\": true,\n                    \"email\": \"{{email}}\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"is_token_revoked\": false,\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"115\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"73-1LQlAytr17JQJD2nnTzYf0tMQQg\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:50.555Z\",\n            \"id\": \"6b0fffca-c8e5-44c5-9789-5555b84f994d\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"content-length\": \"293\",\n                    \"host\": \"orka.default.svc.cluster.local\"\n                },\n                \"method\": \"POST\",\n                \"url\": \"/servlets/netapp.servlets.admin.XMLrequest_filer\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 187,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:44.094Z\",\n            \"id\": \"1aaa13ad-21dc-4bf7-808f-a86c699846c9\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"SSLClient/1.0\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:42.268Z\",\n            \"id\": \"98cfa2fc-cc32-49c4-a75d-6f6f75faeb46\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"2\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/resources/vm/list/all\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"failed_virtual_machine_resources\": [],\n                    \"help\": {},\n                    \"message\": \"\",\n                    \"virtual_machine_resources\": [\n                        {\n                            \"base_image\": \"{{baseImage}}\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 6,\n                            \"gpu_passthrough\": false,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 6,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        },\n                        {\n                            \"base_image\": \"90GCatalinaSSH.img\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 3,\n                            \"gpu_passthrough\": false,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 3,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        },\n                        {\n                            \"base_image\": \"{{baseImage}}\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 6,\n                            \"gpu_passthrough\": true,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 6,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        }\n                    ]\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"928\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"3a0-MgH24dKBjppGUhD02asGXJuW/Ss\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:41.906Z\",\n            \"id\": \"14bf949b-d75d-408a-964c-d0fd37d4991f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/token\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"authenticated\": true,\n                    \"email\": \"{{email}}\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"is_token_revoked\": false,\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"115\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"73-1LQlAytr17JQJD2nnTzYf0tMQQg\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Delete logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/logs",
							"host": [
								"{{domain}}"
							],
							"path": [
								"logs"
							]
						},
						"description": "Delete all logs for your Orka environment.\n\nThis operation requires both token and license authentication. You need to pass both the `orka-licensekey: <license>` and `Authorization: Bearer <token>` headers."
					},
					"response": [
						{
							"name": "Delete logs",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "orka-licensekey",
										"value": "{{licenseKey}}",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/logs",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Deleted User Logs\",\n    \"help\": {},\n    \"errors\": []\n}"
						}
					]
				}
			],
			"description": "> NOTE: Logs 1.0 is **deprecated** and will be removed in the future.  \n> Check Logs 2.0 and all its benefits.\n\nAll requests in this group are related to the management of the logs for your Orka environment. The logs provide detailed information about every CLI command or API request executed against the environment."
		},
		{
			"name": "Logs 2.0",
			"item": [
				{
					"name": "List logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "orka-licensekey",
								"type": "text",
								"value": "{{licenseKey}}"
							}
						],
						"url": {
							"raw": "{{domain}}/logs/query?limit={{logsLimit}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"logs",
								"query"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{logsLimit}}",
									"description": "Limit the total number of logs returned"
								}
							]
						},
						"description": "Retrieve a log of all CLI commands and API requests executed against your Orka environment. \n\nThis is an administrative operation. You need to pass the `orka-licensekey: <license>` header.\n\nYou can optionally limit the amount of results returned with the `limit` query parameter."
					},
					"response": [
						{
							"name": "List all logs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query?logs20=true",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									],
									"query": [
										{
											"key": "logs20",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"resultType\": \"streams\",\n        \"result\": [\n            {\n                \"stream\": {\n                    \"log_type\": \"user_logs\",\n                    \"service\": \"orka-logs\"\n                },\n                \"values\": [\n                    [\n                        \"1655894580126451000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/logs/query?logs20=true&limit=3\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"PostmanRuntime/7.29.0\\\",\\\"accept\\\":\\\"*/*\\\",\\\"postman-token\\\":\\\"e735b899-1649-4eea-8d28-6d84fdfd63c5\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"accept-encoding\\\":\\\"gzip, deflate, br\\\",\\\"connection\\\":\\\"keep-alive\\\",\\\"content-length\\\":\\\"34\\\"},\\\"body\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\"}},\\\"response\\\":{\\\"statusCode\\\":401,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"156\\\",\\\"etag\\\":\\\"W/\\\\\\\"9c-cFgrJ/lNab1tLaFjdmtNEY66dtE\\\\\\\"\\\"}},\\\"user\\\":{},\\\"createdAt\\\":\\\"2022-06-22T10:43:00.125Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655894568471132000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/list\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"axios/0.25.0\\\",\\\"content-length\\\":\\\"2\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"1778\\\",\\\"etag\\\":\\\"W/\\\\\\\"6f2-DJsy2FbTwJROKdS/gHya1PNzFqE\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"\\\",\\\"help\\\":{},\\\"errors\\\":[],\\\"virtual_machine_resources\\\":[{\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"vm_deployment_status\\\":\\\"Deployed\\\",\\\"status\\\":[{\\\"owner\\\":\\\"{{email}}\\\",\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"virtual_machine_id\\\":\\\"{{vmID}}\\\",\\\"node_location\\\":\\\"mini-3\\\",\\\"node_status\\\":\\\"UP\\\",\\\"virtual_machine_ip\\\":\\\"{{vmIP}}\\\",\\\"vnc_port\\\":\\\"5999\\\",\\\"screen_sharing_port\\\":\\\"5900\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"cpu\\\":3,\\\"vcpu\\\":3,\\\"gpu\\\":\\\"N/A\\\",\\\"RAM\\\":\\\"15.00G\\\",\\\"base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"image\\\":\\\"{{vm}}\\\",\\\"configuration_template\\\":\\\"default\\\",\\\"vm_status\\\":\\\"n/a\\\",\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"reserved_ports\\\":[{\\\"host_port\\\":8822,\\\"guest_port\\\":8821,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5900,\\\"guest_port\\\":5900,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5999,\\\"guest_port\\\":5999,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":446,\\\"guest_port\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}],\\\"creation_timestamp\\\":\\\"2022-06-22T10:42:44Z\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"replicas\\\":1},{\\\"owner\\\":\\\"{{email}}\\\",\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"virtual_machine_id\\\":\\\"{{vmID}}\\\",\\\"node_location\\\":\\\"mini-2\\\",\\\"node_status\\\":\\\"UP\\\",\\\"virtual_machine_ip\\\":\\\"vmIP\\\",\\\"vnc_port\\\":\\\"5999\\\",\\\"screen_sharing_port\\\":\\\"5900\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"cpu\\\":3,\\\"vcpu\\\":3,\\\"gpu\\\":\\\"N/A\\\",\\\"RAM\\\":\\\"15.00G\\\",\\\"base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"image\\\":\\\"{{vm}}\\\",\\\"configuration_template\\\":\\\"default\\\",\\\"vm_status\\\":\\\"n/a\\\",\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"reserved_ports\\\":[{\\\"host_port\\\":8822,\\\"guest_port\\\":8821,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5900,\\\"guest_port\\\":5900,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5999,\\\"guest_port\\\":5999,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":6446,\\\"guest_port\\\":446,\\\"protocol\\\":\\\"TCP\\\"}],\\\"creation_timestamp\\\":\\\"2022-06-22T10:42:44Z\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"replicas\\\":1}]}],\\\"failed_virtual_machine_resources\\\":[]}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"a152a817-9b5e-4e4a-a359-303f4ab642cb\\\"},\\\"createdAt\\\":\\\"2022-06-22T10:42:48.469Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655894568237234000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/deploy\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"axios/0.25.0\\\",\\\"content-length\\\":\\\"68\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\",\\\"reserved_ports\\\":[\\\"446:8080\\\"],\\\"vnc_console\\\":true}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"931\\\",\\\"etag\\\":\\\"W/\\\\\\\"3a3-Qwwt2Ren4iDc76e16Jc/myCVfDs\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"Successfully deployed VM\\\",\\\"help\\\":{\\\"start_virtual_machine\\\":\\\"To start a VM send rest request to http://{{domain}}/resources/vm/exec/start\\\",\\\"stop_virtual_machine\\\":\\\"To stop a VM send rest request to http://{{domain}}/resources/vm/exec/stop\\\",\\\"resume_virtual_machine\\\":\\\"To resume a VM send rest request to http://{{domain}}/resources/vm/exec/resume\\\",\\\"suspend_virtual_machine\\\":\\\"To suspend a VM send rest request to http://{{domain}}/resources/vm/exec/suspend\\\",\\\"data_for_virtual_machine_exec_tasks\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\",\\\"orka_node_name\\\":\\\"mini-3\\\"},\\\"virtual_machine_vnc\\\":\\\"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\\\"},\\\"errors\\\":[],\\\"ram\\\":\\\"16.00G\\\",\\\"vcpu\\\":\\\"3\\\",\\\"host_cpu\\\":\\\"3\\\",\\\"ip\\\":\\\"{{vmIP}}\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"screen_share_port\\\":\\\"5900\\\",\\\"vm_id\\\":\\\"{{vmID}}\\\",\\\"port_warnings\\\":[],\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"gpu_passthrough\\\":false,\\\"vnc_port\\\":\\\"5999\\\"}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"a152a817-9b5e-4e4a-a359-303f4ab642cb\\\"},\\\"createdAt\\\":\\\"2022-06-22T10:42:48.236Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ]\n                ]\n            }\n        ],\n        \"stats\": {\n            \"summary\": {\n                \"bytesProcessedPerSecond\": 18425349,\n                \"linesProcessedPerSecond\": 13748,\n                \"totalBytesProcessed\": 99171,\n                \"totalLinesProcessed\": 74,\n                \"execTime\": 0.005382313\n            },\n            \"store\": {\n                \"totalChunksRef\": 0,\n                \"totalChunksDownloaded\": 0,\n                \"chunksDownloadTime\": 0,\n                \"headChunkBytes\": 0,\n                \"headChunkLines\": 0,\n                \"decompressedBytes\": 0,\n                \"decompressedLines\": 0,\n                \"compressedBytes\": 0,\n                \"totalDuplicates\": 0\n            },\n            \"ingester\": {\n                \"totalReached\": 1,\n                \"totalChunksMatched\": 1,\n                \"totalBatches\": 1,\n                \"totalLinesSent\": 3,\n                \"headChunkBytes\": 88729,\n                \"headChunkLines\": 59,\n                \"decompressedBytes\": 10442,\n                \"decompressedLines\": 15,\n                \"compressedBytes\": 24122,\n                \"totalDuplicates\": 0\n            }\n        }\n    }\n}"
						},
						{
							"name": "List 10 most recent logs",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query?limit={{logsLimit}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									],
									"query": [
										{
											"key": "limit",
											"value": "{{logsLimit}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"logs\": [\n        {\n            \"createdAt\": \"2021-05-12T16:04:00.929Z\",\n            \"id\": \"06e22e80-a5fd-4799-a8ac-95915c2e0292\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:03:52.497Z\",\n            \"id\": \"fc67914d-bd5f-4a7a-9147-9bc436d3c80f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"*/*\",\n                    \"host\": \"{{host}}\",\n                    \"user-agent\": \"curl/7.64.1\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/health-check\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"api_version\": \"1.5.3\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"58\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"3a-31O1WutQkbVu0KijLTIsY3Pr0Ig\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:03:00.917Z\",\n            \"id\": \"842141fd-c059-4c7e-bef9-74840ead7e4b\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:02:00.888Z\",\n            \"id\": \"5abff770-c819-46dc-a975-64e3084d5b5f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"LogicMonitor\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:51.876Z\",\n            \"id\": \"a1a0b5f2-7b86-43b8-9e09-956d07d2e0c0\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"2\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/resources/vm/configs\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"configs\": [\n                        {\n                            \"attached_disk\": \"None\",\n                            \"gpu_passthrough\": false,\n                            \"io_boost\": false,\n                            \"iso_image\": \"None\",\n                            \"orka_base_image\": \"{{baseImage}}\",\n                            \"orka_cpu_core\": 6,\n                            \"orka_vm_name\": \"{{vm}}\",\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu_count\": 6,\n                            \"vnc_console\": true\n                        },\n                        {\n                            \"attached_disk\": \"None\",\n                            \"gpu_passthrough\": true,\n                            \"io_boost\": false,\n                            \"iso_image\": \"None\",\n                            \"orka_base_image\": \"{{baseImage}}\",\n                            \"orka_cpu_core\": 6,\n                            \"orka_vm_name\": \"{{vm}}-gpu\",\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu_count\": 6,\n                            \"vnc_console\": false\n                        }\n                    ],\n                    \"errors\": [],\n                    \"help\": {},\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"570\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"23a-m0uaWt51XUE4fsyUSVSaI5plUqQ\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:51.646Z\",\n            \"id\": \"da4f1697-d182-44d3-ae9e-70d901b22e4c\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/token\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"authenticated\": true,\n                    \"email\": \"{{email}}\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"is_token_revoked\": false,\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"115\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"73-1LQlAytr17JQJD2nnTzYf0tMQQg\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:50.555Z\",\n            \"id\": \"6b0fffca-c8e5-44c5-9789-5555b84f994d\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"content-length\": \"293\",\n                    \"host\": \"orka.default.svc.cluster.local\"\n                },\n                \"method\": \"POST\",\n                \"url\": \"/servlets/netapp.servlets.admin.XMLrequest_filer\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 187,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:44.094Z\",\n            \"id\": \"1aaa13ad-21dc-4bf7-808f-a86c699846c9\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept-encoding\": \"gzip\",\n                    \"host\": \"192.168.151.236:443\",\n                    \"user-agent\": \"SSLClient/1.0\",\n                    \"x-forwarded-for\": \"192.168.72.65\",\n                    \"x-forwarded-host\": \"192.168.151.236:443\",\n                    \"x-forwarded-port\": \"443\",\n                    \"x-forwarded-proto\": \"https\",\n                    \"x-forwarded-server\": \"traefik-ingress-controller-76d8b67dc4-4wqpm\",\n                    \"x-real-ip\": \"192.168.72.65\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/\"\n            },\n            \"response\": {\n                \"body\": {},\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": 139,\n                    \"content-security-policy\": \"default-src 'none'\",\n                    \"content-type\": \"text/html; charset=utf-8\",\n                    \"x-content-type-options\": \"nosniff\"\n                },\n                \"statusCode\": 404\n            },\n            \"user\": {}\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:42.268Z\",\n            \"id\": \"98cfa2fc-cc32-49c4-a75d-6f6f75faeb46\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"content-length\": \"2\",\n                    \"content-type\": \"application/json;charset=utf-8\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/resources/vm/list/all\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"errors\": [],\n                    \"failed_virtual_machine_resources\": [],\n                    \"help\": {},\n                    \"message\": \"\",\n                    \"virtual_machine_resources\": [\n                        {\n                            \"base_image\": \"{{baseImage}}\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 6,\n                            \"gpu_passthrough\": false,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 6,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        },\n                        {\n                            \"base_image\": \"90GCatalinaSSH.img\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 3,\n                            \"gpu_passthrough\": false,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 3,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        },\n                        {\n                            \"base_image\": \"{{baseImage}}\",\n                            \"configuration_template\": \"default\",\n                            \"cpu\": 6,\n                            \"gpu_passthrough\": true,\n                            \"image\": \"{{vm}}\",\n                            \"io_boost\": false,\n                            \"owner\": \"{{email}}\",\n                            \"use_saved_state\": false,\n                            \"vcpu\": 6,\n                            \"virtual_machine_name\": \"{{vm}}\",\n                            \"vm_deployment_status\": \"Not Deployed\"\n                        }\n                    ]\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"928\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"3a0-MgH24dKBjppGUhD02asGXJuW/Ss\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        },\n        {\n            \"createdAt\": \"2021-05-12T16:01:41.906Z\",\n            \"id\": \"14bf949b-d75d-408a-964c-d0fd37d4991f\",\n            \"logVersion\": \"1.0\",\n            \"request\": {\n                \"body\": {},\n                \"headers\": {\n                    \"accept\": \"application/json, text/plain, */*\",\n                    \"connection\": \"close\",\n                    \"host\": \"{{host}}\",\n                    \"platform\": \"darwin\",\n                    \"release\": \"19.6.0\",\n                    \"user-agent\": \"orka-cli\",\n                    \"x-cli-version\": \"1.5.0\"\n                },\n                \"method\": \"GET\",\n                \"url\": \"/token\"\n            },\n            \"response\": {\n                \"body\": {\n                    \"authenticated\": true,\n                    \"email\": \"{{email}}\",\n                    \"errors\": [],\n                    \"help\": {},\n                    \"is_token_revoked\": false,\n                    \"message\": \"\"\n                },\n                \"headers\": {\n                    \"access-control-allow-origin\": \"*\",\n                    \"content-length\": \"115\",\n                    \"content-type\": \"application/json; charset=utf-8\",\n                    \"etag\": \"W/\\\"73-1LQlAytr17JQJD2nnTzYf0tMQQg\\\"\"\n                },\n                \"statusCode\": 200\n            },\n            \"user\": {\n                \"email\": \"{{email}}\",\n                \"id\": \"2e0fe8bc-9c26-4f44-b783-9dfc47a686f9\"\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Filter logs by date",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query?logs20=true&limit={{logsLimit}}&start={{logsStartDate}}",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									],
									"query": [
										{
											"key": "logs20",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "{{logsLimit}}"
										},
										{
											"key": "start",
											"value": "{{logsStartDate}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"resultType\": \"streams\",\n        \"result\": [\n            {\n                \"stream\": {\n                    \"log_type\": \"user_logs\",\n                    \"service\": \"orka-logs\"\n                },\n                \"values\": [\n                    [\n                        \"1655894580126451000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/logs/query?logs20=true&limit=3\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"PostmanRuntime/7.29.0\\\",\\\"accept\\\":\\\"*/*\\\",\\\"postman-token\\\":\\\"e735b899-1649-4eea-8d28-6d84fdfd63c5\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"accept-encoding\\\":\\\"gzip, deflate, br\\\",\\\"connection\\\":\\\"keep-alive\\\",\\\"content-length\\\":\\\"34\\\"},\\\"body\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\"}},\\\"response\\\":{\\\"statusCode\\\":401,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"156\\\",\\\"etag\\\":\\\"W/\\\\\\\"9c-cFgrJ/lNab1tLaFjdmtNEY66dtE\\\\\\\"\\\"}},\\\"user\\\":{},\\\"createdAt\\\":\\\"2022-06-22T10:43:00.125Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655894568471132000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/list\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"axios/0.25.0\\\",\\\"content-length\\\":\\\"2\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"1778\\\",\\\"etag\\\":\\\"W/\\\\\\\"6f2-DJsy2FbTwJROKdS/gHya1PNzFqE\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"\\\",\\\"help\\\":{},\\\"errors\\\":[],\\\"virtual_machine_resources\\\":[{\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"vm_deployment_status\\\":\\\"Deployed\\\",\\\"status\\\":[{\\\"owner\\\":\\\"{{email}}\\\",\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"virtual_machine_id\\\":\\\"{{vmID}}\\\",\\\"node_location\\\":\\\"mini-3\\\",\\\"node_status\\\":\\\"UP\\\",\\\"virtual_machine_ip\\\":\\\"{{vmIP}}\\\",\\\"vnc_port\\\":\\\"5999\\\",\\\"screen_sharing_port\\\":\\\"5900\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"cpu\\\":3,\\\"vcpu\\\":3,\\\"gpu\\\":\\\"N/A\\\",\\\"RAM\\\":\\\"15.00G\\\",\\\"base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"image\\\":\\\"{{vm}}\\\",\\\"configuration_template\\\":\\\"default\\\",\\\"vm_status\\\":\\\"n/a\\\",\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"reserved_ports\\\":[{\\\"host_port\\\":8822,\\\"guest_port\\\":8821,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5900,\\\"guest_port\\\":5900,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5999,\\\"guest_port\\\":5999,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":446,\\\"guest_port\\\":8080,\\\"protocol\\\":\\\"TCP\\\"}],\\\"creation_timestamp\\\":\\\"2022-06-22T10:42:44Z\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"replicas\\\":1},{\\\"owner\\\":\\\"{{email}}\\\",\\\"virtual_machine_name\\\":\\\"{{vm}}\\\",\\\"virtual_machine_id\\\":\\\"{{vmID}}\\\",\\\"node_location\\\":\\\"mini-2\\\",\\\"node_status\\\":\\\"UP\\\",\\\"virtual_machine_ip\\\":\\\"vmIP\\\",\\\"vnc_port\\\":\\\"5999\\\",\\\"screen_sharing_port\\\":\\\"5900\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"cpu\\\":3,\\\"vcpu\\\":3,\\\"gpu\\\":\\\"N/A\\\",\\\"RAM\\\":\\\"15.00G\\\",\\\"base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"image\\\":\\\"{{vm}}\\\",\\\"configuration_template\\\":\\\"default\\\",\\\"vm_status\\\":\\\"n/a\\\",\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"reserved_ports\\\":[{\\\"host_port\\\":8822,\\\"guest_port\\\":8821,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5900,\\\"guest_port\\\":5900,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":5999,\\\"guest_port\\\":5999,\\\"protocol\\\":\\\"TCP\\\"},{\\\"host_port\\\":6446,\\\"guest_port\\\":446,\\\"protocol\\\":\\\"TCP\\\"}],\\\"creation_timestamp\\\":\\\"2022-06-22T10:42:44Z\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"replicas\\\":1}]}],\\\"failed_virtual_machine_resources\\\":[]}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"a152a817-9b5e-4e4a-a359-303f4ab642cb\\\"},\\\"createdAt\\\":\\\"2022-06-22T10:42:48.469Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655894568237234000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/deploy\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"axios/0.25.0\\\",\\\"content-length\\\":\\\"68\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\",\\\"reserved_ports\\\":[\\\"446:8080\\\"],\\\"vnc_console\\\":true}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"931\\\",\\\"etag\\\":\\\"W/\\\\\\\"3a3-Qwwt2Ren4iDc76e16Jc/myCVfDs\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"Successfully deployed VM\\\",\\\"help\\\":{\\\"start_virtual_machine\\\":\\\"To start a VM send rest request to http://{{domain}}/resources/vm/exec/start\\\",\\\"stop_virtual_machine\\\":\\\"To stop a VM send rest request to http://{{domain}}/resources/vm/exec/stop\\\",\\\"resume_virtual_machine\\\":\\\"To resume a VM send rest request to http://{{domain}}/resources/vm/exec/resume\\\",\\\"suspend_virtual_machine\\\":\\\"To suspend a VM send rest request to http://{{domain}}/resources/vm/exec/suspend\\\",\\\"data_for_virtual_machine_exec_tasks\\\":{\\\"orka_vm_name\\\":\\\"{{vm}}\\\",\\\"orka_node_name\\\":\\\"mini-3\\\"},\\\"virtual_machine_vnc\\\":\\\"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\\\"},\\\"errors\\\":[],\\\"ram\\\":\\\"16.00G\\\",\\\"vcpu\\\":\\\"3\\\",\\\"host_cpu\\\":\\\"3\\\",\\\"ip\\\":\\\"{{vmIP}}\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"screen_share_port\\\":\\\"5900\\\",\\\"vm_id\\\":\\\"{{vmID}}\\\",\\\"port_warnings\\\":[],\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"gpu_passthrough\\\":false,\\\"vnc_port\\\":\\\"5999\\\"}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"a152a817-9b5e-4e4a-a359-303f4ab642cb\\\"},\\\"createdAt\\\":\\\"2022-06-22T10:42:48.236Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ]\n                ]\n            }\n        ],\n        \"stats\": {\n            \"summary\": {\n                \"bytesProcessedPerSecond\": 18425349,\n                \"linesProcessedPerSecond\": 13748,\n                \"totalBytesProcessed\": 99171,\n                \"totalLinesProcessed\": 74,\n                \"execTime\": 0.005382313\n            },\n            \"store\": {\n                \"totalChunksRef\": 0,\n                \"totalChunksDownloaded\": 0,\n                \"chunksDownloadTime\": 0,\n                \"headChunkBytes\": 0,\n                \"headChunkLines\": 0,\n                \"decompressedBytes\": 0,\n                \"decompressedLines\": 0,\n                \"compressedBytes\": 0,\n                \"totalDuplicates\": 0\n            },\n            \"ingester\": {\n                \"totalReached\": 1,\n                \"totalChunksMatched\": 1,\n                \"totalBatches\": 1,\n                \"totalLinesSent\": 3,\n                \"headChunkBytes\": 88729,\n                \"headChunkLines\": 59,\n                \"decompressedBytes\": 10442,\n                \"decompressedLines\": 15,\n                \"compressedBytes\": 24122,\n                \"totalDuplicates\": 0\n            }\n        }\n    }\n}"
						},
						{
							"name": "Filter logs by string",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "orka-licensekey",
										"type": "text",
										"value": "{{licenseKey}}"
									}
								],
								"url": {
									"raw": "{{domain}}/logs/query?logs20=true&limit={{logsLimit}}&query={log_type=\"user_logs\"}|~\"demo-logs\"!~\"logs/query\"",
									"host": [
										"{{domain}}"
									],
									"path": [
										"logs",
										"query"
									],
									"query": [
										{
											"key": "logs20",
											"value": "true"
										},
										{
											"key": "limit",
											"value": "{{logsLimit}}"
										},
										{
											"key": "query",
											"value": "{log_type=\"user_logs\"}|~\"demo-logs\"!~\"logs/query\""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"status\": \"success\",\n    \"data\": {\n        \"resultType\": \"streams\",\n        \"result\": [\n            {\n                \"stream\": {\n                    \"log_type\": \"user_logs\",\n                    \"service\": \"orka-logs\"\n                },\n                \"values\": [\n                    [\n                        \"1655896120552266000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/deploy\\\",\\\"method\\\":\\\"POST\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"content-type\\\":\\\"application/json\\\",\\\"user-agent\\\":\\\"orka-cli\\\",\\\"x-cli-version\\\":\\\"2.1.0\\\",\\\"platform\\\":\\\"darwin\\\",\\\"release\\\":\\\"21.1.0\\\",\\\"content-length\\\":\\\"114\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{\\\"orka_vm_name\\\":\\\"demo-logs\\\",\\\"replicas\\\":1,\\\"vnc_console\\\":true,\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"gpu_passthrough\\\":false}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"921\\\",\\\"etag\\\":\\\"W/\\\\\\\"399-8ZKOtDk1phgqtHqhYO8LdCBfHr0\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"Successfully deployed VM\\\",\\\"help\\\":{\\\"start_virtual_machine\\\":\\\"To start a VM send rest request to http://{{domain}}/resources/vm/exec/start\\\",\\\"stop_virtual_machine\\\":\\\"To stop a VM send rest request to http://{{domain}}/resources/vm/exec/stop\\\",\\\"resume_virtual_machine\\\":\\\"To resume a VM send rest request to http://{{domain}}/resources/vm/exec/resume\\\",\\\"suspend_virtual_machine\\\":\\\"To suspend a VM send rest request to http://{{domain}}/resources/vm/exec/suspend\\\",\\\"data_for_virtual_machine_exec_tasks\\\":{\\\"orka_vm_name\\\":\\\"demo-logs\\\",\\\"orka_node_name\\\":\\\"mini-1\\\"},\\\"virtual_machine_vnc\\\":\\\"Once started and deployed, you can use VNC to access it via {{vmIP}}:5999\\\"},\\\"errors\\\":[],\\\"ram\\\":\\\"16.00G\\\",\\\"vcpu\\\":\\\"3\\\",\\\"host_cpu\\\":\\\"3\\\",\\\"ip\\\":\\\"{{vmIP}}\\\",\\\"ssh_port\\\":\\\"8822\\\",\\\"screen_share_port\\\":\\\"5900\\\",\\\"vm_id\\\":\\\"84ac9cf673e7a\\\",\\\"port_warnings\\\":[],\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"gpu_passthrough\\\":false,\\\"vnc_port\\\":\\\"5999\\\"}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"dc440e6e-eacd-4a84-8800-cd153b4a5b58\\\"},\\\"createdAt\\\":\\\"2022-06-22T11:08:40.548Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655896116401379000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/configs/demo-logs\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"user-agent\\\":\\\"orka-cli\\\",\\\"x-cli-version\\\":\\\"2.1.0\\\",\\\"platform\\\":\\\"darwin\\\",\\\"release\\\":\\\"21.1.0\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"390\\\",\\\"etag\\\":\\\"W/\\\\\\\"186-8FBclVxmCIQtI+usSZ6+oaV8X+8\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"\\\",\\\"help\\\":{},\\\"errors\\\":[],\\\"configs\\\":[{\\\"owner\\\":\\\"{{email}}\\\",\\\"orka_vm_name\\\":\\\"demo-logs\\\",\\\"orka_base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"orka_cpu_core\\\":3,\\\"vcpu_count\\\":3,\\\"iso_image\\\":\\\"None\\\",\\\"attached_disk\\\":\\\"None\\\",\\\"vnc_console\\\":true,\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"gpu_passthrough\\\":false,\\\"system_serial\\\":\\\"N/A\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"scheduler\\\":\\\"default\\\",\\\"memory\\\":\\\"automatic\\\"}]}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"dc440e6e-eacd-4a84-8800-cd153b4a5b58\\\"},\\\"createdAt\\\":\\\"2022-06-22T11:08:36.399Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ],\n                    [\n                        \"1655896116401334000\",\n                        \"{\\\"message\\\":{\\\"request\\\":{\\\"url\\\":\\\"/resources/vm/configs/demo-logs\\\",\\\"method\\\":\\\"GET\\\",\\\"headers\\\":{\\\"accept\\\":\\\"application/json, text/plain, */*\\\",\\\"user-agent\\\":\\\"orka-cli\\\",\\\"x-cli-version\\\":\\\"2.1.0\\\",\\\"platform\\\":\\\"darwin\\\",\\\"release\\\":\\\"21.1.0\\\",\\\"host\\\":\\\"{{host}}\\\",\\\"connection\\\":\\\"close\\\"},\\\"body\\\":{}},\\\"response\\\":{\\\"statusCode\\\":200,\\\"headers\\\":{\\\"access-control-allow-origin\\\":\\\"*\\\",\\\"content-type\\\":\\\"application/json; charset=utf-8\\\",\\\"content-length\\\":\\\"390\\\",\\\"etag\\\":\\\"W/\\\\\\\"186-8FBclVxmCIQtI+usSZ6+oaV8X+8\\\\\\\"\\\"},\\\"body\\\":{\\\"message\\\":\\\"\\\",\\\"help\\\":{},\\\"errors\\\":[],\\\"configs\\\":[{\\\"owner\\\":\\\"{{email}}\\\",\\\"orka_vm_name\\\":\\\"demo-logs\\\",\\\"orka_base_image\\\":\\\"90GBigSurSSH.img\\\",\\\"orka_cpu_core\\\":3,\\\"vcpu_count\\\":3,\\\"iso_image\\\":\\\"None\\\",\\\"attached_disk\\\":\\\"None\\\",\\\"vnc_console\\\":true,\\\"io_boost\\\":true,\\\"use_saved_state\\\":false,\\\"gpu_passthrough\\\":false,\\\"system_serial\\\":\\\"N/A\\\",\\\"tag\\\":\\\"\\\",\\\"tag_required\\\":false,\\\"scheduler\\\":\\\"default\\\",\\\"memory\\\":\\\"automatic\\\"}]}},\\\"user\\\":{\\\"email\\\":\\\"{{email}}\\\",\\\"id\\\":\\\"dc440e6e-eacd-4a84-8800-cd153b4a5b58\\\"},\\\"createdAt\\\":\\\"2022-06-22T11:08:36.399Z\\\",\\\"level\\\":\\\"info\\\",\\\"logVersion\\\":\\\"2.0\\\"}}\"\n                    ]\n                ]\n            }\n        ],\n        \"stats\": {\n            \"summary\": {\n                \"bytesProcessedPerSecond\": 8358710,\n                \"linesProcessedPerSecond\": 6207,\n                \"totalBytesProcessed\": 675940,\n                \"totalLinesProcessed\": 502,\n                \"execTime\": 0.080866544\n            },\n            \"store\": {\n                \"totalChunksRef\": 0,\n                \"totalChunksDownloaded\": 0,\n                \"chunksDownloadTime\": 0,\n                \"headChunkBytes\": 0,\n                \"headChunkLines\": 0,\n                \"decompressedBytes\": 0,\n                \"decompressedLines\": 0,\n                \"compressedBytes\": 0,\n                \"totalDuplicates\": 0\n            },\n            \"ingester\": {\n                \"totalReached\": 16,\n                \"totalChunksMatched\": 1,\n                \"totalBatches\": 1,\n                \"totalLinesSent\": 3,\n                \"headChunkBytes\": 14691,\n                \"headChunkLines\": 15,\n                \"decompressedBytes\": 661249,\n                \"decompressedLines\": 487,\n                \"compressedBytes\": 48978,\n                \"totalDuplicates\": 0\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to the management of the logs for your Orka environment. The logs provide detailed information about every CLI command or API request executed against the environment."
		},
		{
			"name": "Environment Checks",
			"item": [
				{
					"name": "Check token status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{domain}}/token",
							"host": [
								"{{domain}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Retrieve information about the token specified in the header. The request returns information about the associated email address, the authentication status of the token, and if the token is revoked.\n\nThis is a non-administrative operation and requires token authentication. You need to pass the `Authorization: Bearer <token>` header."
					},
					"response": [
						{
							"name": "Check token status",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/token",
									"host": [
										"{{domain}}"
									],
									"path": [
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "78"
								},
								{
									"key": "ETag",
									"value": "W/\"4e-tPcakJW1jFc46SZAfLK7aKnFohY\""
								},
								{
									"key": "Date",
									"value": "Mon, 22 Apr 2019 17:54:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"authenticated\": true,\n    \"is_token_revoked\": false,\n    \"email\": \"{{email}}\"\n}"
						}
					]
				},
				{
					"name": "Check API version",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/health-check",
							"host": [
								"{{domain}}"
							],
							"path": [
								"health-check"
							]
						},
						"description": "Retrieve the current API version of your Orka environment.\n\nThis operation does not require authentication."
					},
					"response": [
						{
							"name": "Check API version",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/health-check",
									"host": [
										"{{domain}}"
									],
									"path": [
										"health-check"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"api_version\": \"{{apiVersion}}\"\n}"
						}
					]
				},
				{
					"name": "Check password requirements",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/validation-requirements",
							"host": [
								"{{domain}}"
							],
							"path": [
								"validation-requirements"
							]
						},
						"description": "Retrieve the current password requirements for creating an Orka user.\n\nThis operation does not require authentication."
					},
					"response": [
						{
							"name": "Check password requirements",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/validation-requirements",
									"host": [
										"{{domain}}"
									],
									"path": [
										"validation-requirements"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"password_length\": 6\n}"
						}
					]
				},
				{
					"name": "Validate license key",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"licenseKey\": \"{{licenseKey}}\"\n}"
						},
						"url": {
							"raw": "{{domain}}/validate-license-key",
							"host": [
								"{{domain}}"
							],
							"path": [
								"validate-license-key"
							]
						},
						"description": "Check if the license key specified in the body is authorized or not.\n\nThis operation does not require authentication."
					},
					"response": [
						{
							"name": "Validate license key - Authorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/validate-license-key",
									"host": [
										"{{domain}}"
									],
									"path": [
										"validate-license-key"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"Provided license key is valid\",\n    \"help\": {},\n    \"errors\": []\n}"
						},
						{
							"name": "Validate license key - Unauthroized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{domain}}/validate-license-key",
									"host": [
										"{{domain}}"
									],
									"path": [
										"validate-license-key"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [\n        {\n            \"message\": \"Provided license key is not valid\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get default base image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/default-base-image",
							"host": [
								"{{domain}}"
							],
							"path": [
								"default-base-image"
							]
						},
						"description": "Retrieve the name of the default base image for the Orka environment.\n\nThis operation does not require authentication.\n\n\n\n\n\n---\n© 2019-2020 Copyright MacStadium, Inc. – Documentation built with [Postman](https://www.getpostman.com/). Orka is a registered trademark of MacStadium, Inc."
					},
					"response": [
						{
							"name": "Get default base image",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{domain}}/default-base-image",
									"host": [
										"{{domain}}"
									],
									"path": [
										"default-base-image"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"message\": \"\",\n    \"help\": {},\n    \"errors\": [],\n    \"default_base_image\": \"{{baseImage}}\"\n}"
						}
					]
				}
			],
			"description": "All requests in this group are related to Orka environment checks such as token and license key validation, and health checks.",
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "logsLimit",
			"value": "10"
		}
	]
}
